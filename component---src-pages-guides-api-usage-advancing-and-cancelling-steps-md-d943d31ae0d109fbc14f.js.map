{"version":3,"file":"component---src-pages-guides-api-usage-advancing-and-cancelling-steps-md-d943d31ae0d109fbc14f.js","mappings":"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","sources":["webpack://cloudmanager-api-docs/./src/pages/guides/api-usage/advancing-and-cancelling-steps.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/cloudmanager-api-docs/cloudmanager-api-docs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"advancing-and-cancelling-steps\"\n    }}>{`Advancing and Cancelling Steps`}</h1>\n    <p>{`Certain steps in the pipeline can be \"advanced\" or \"cancelled\" when interactive action is required due to a pipeline behavior or configuration. These actions can be performed through the Cloud Manager UI or programatically.`}</p>\n    <p>{`These actions apply to a variety of steps:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`For the `}<a parentName=\"li\" {...{\n          \"href\": \"#override-code-quality-security-test-performance-test-results\"\n        }}>{`Code Quality, Security Test, and Performance Test`}</a>{` steps, advance and cancel are how important failures in these steps get overridden or rejected, respectively.`}</li>\n      <li parentName=\"ul\">{`For the `}<a parentName=\"li\" {...{\n          \"href\": \"#go-live-approval\"\n        }}>{`Go-Live Approval`}</a>{` step, advance and cancel are how the deployment is approved or rejected, respectively.`}</li>\n      <li parentName=\"ul\">{`For the `}<a parentName=\"li\" {...{\n          \"href\": \"#schedule-step\"\n        }}>{`Schedule`}</a>{` step, advance and cancel are how a schedule is set or the pipeline is canclled, respectively.`}</li>\n      <li parentName=\"ul\">{`For the Build, Security Test, and Performance Test steps, cancel can be used to cancel the step (and the pipeline) while the step is running.`}</li>\n    </ul>\n    <p>{`For both advance and cancel functions, a `}<inlineCode parentName=\"p\">{`PUT`}</inlineCode>{` request is made to the appropriate endpoint, discoverable as the `}<inlineCode parentName=\"p\">{`http://ns.adobe.com/adobecloud/rel/pipeline/advance`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`http://ns.adobe.com/adobecloud/rel/pipeline/cancel`}</inlineCode>{` links of the step, respectively. The body of the request will vary based on the step and circumstance.`}</p>\n    <InlineAlert slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`These requests require that the service account for the integration be assigned the Deployment Manager, Program Manager, or Business Owner role. See the Cloud Manager `}<a href=\"https://www.adobe.com/go/aem_cloud_mrg_usersroles_en\">{`documentation`}</a>{` for more information.`}</p>\n    <h2 {...{\n      \"id\": \"advance-body-definitions\"\n    }}>{`Advance Body Definitions`}</h2>\n    <h3 {...{\n      \"id\": \"override-code-quality-security-test-performance-test-results\"\n    }}>{`Override Code Quality, Security Test, Performance Test Results`}</h3>\n    <p>{`To override important failures in the Code Quality, Security Test, and Performance Test steps, the request body contains an array of the metrics being overridden. The metric keys can be found in the Step Metrics response and are also listed on the `}<a parentName=\"p\" {...{\n        \"href\": \"understanding-metric-data.md\"\n      }}>{`Understanding Metric Data`}</a>{` page. For example, if the `}<inlineCode parentName=\"p\">{`coverage`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`sqale_rating`}</inlineCode>{` metrics were failing and an override was desired, the body would be:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`{\n    \"metrics\": [\n        {\n            \"kpi\":\"coverage\",\n            \"override\":true\n        },\n        {\n            \"kpi\":\"sqale_rating\",\n            \"override\":true\n        }\n    ]\n}\n`}</code></pre>\n    <InlineAlert slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`It is required that `}<em parentName=\"p\">{`all`}</em>{` failing important metrics be sent. Otherwise, an error response will be generated.`}</p>\n    <h3 {...{\n      \"id\": \"go-live-approval\"\n    }}>{`Go-Live Approval`}</h3>\n    <p>{`The body for the Go-Live Approval step passes `}<inlineCode parentName=\"p\">{`approved`}</inlineCode>{` as `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`{\n    \"approved\": true\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"schedule-step\"\n    }}>{`Schedule Step`}</h3>\n    <p>{`The body for the Schedule step can take two forms. The first is where a future date/time is set. In this case, `}<inlineCode parentName=\"p\">{`type`}</inlineCode>{` in the request body is set to `}<inlineCode parentName=\"p\">{`SCHEDULED`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`schedule`}</inlineCode>{` is set to an ISO-8601 formatted date. For example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`{\n    \"type\":\"SCHEDULED\",\n    \"schedule\":\"2018-11-16T13:45:00.000Z\"\n}\n`}</code></pre>\n    <p>{`The second form is where the deployment should be done immediately. In this case, the `}<inlineCode parentName=\"p\">{`type`}</inlineCode>{` is set to `}<inlineCode parentName=\"p\">{`IMMEDIATE`}</inlineCode>{` and no `}<inlineCode parentName=\"p\">{`schedule`}</inlineCode>{` value is required:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`{\n    \"type\":\"IMMEDIATE\"\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"resume-paused-deployment\"\n    }}>{`Resume Paused Deployment`}</h3>\n    <p>{`The body to resume a paused deployment step passes `}<inlineCode parentName=\"p\">{`resume`}</inlineCode>{` as `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`{\n    \"resume\":true\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"stop-paused-deployment\"\n    }}>{`Stop Paused Deployment`}</h3>\n    <p>{`The body to stop a paused deployment step passes `}<inlineCode parentName=\"p\">{`resume`}</inlineCode>{` as `}<inlineCode parentName=\"p\">{`false`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`{\n    \"resume\":false\n}\n`}</code></pre>\n    <InlineAlert slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`Note that even though stopping a paused deployment causes the pipeline to end, it `}<strong parentName=\"p\">{`must`}</strong>{` be sent to the advance endpoint.`}</p>\n    <h2 {...{\n      \"id\": \"cancel-body-definitions\"\n    }}>{`Cancel Body Definitions`}</h2>\n    <h3 {...{\n      \"id\": \"reject-code-quality-security-test-performance-test-results\"\n    }}>{`Reject Code Quality, Security Test, Performance Test Results`}</h3>\n    <p>{`The body to reject important failures for one of these steps passes `}<inlineCode parentName=\"p\">{`override`}</inlineCode>{` as `}<inlineCode parentName=\"p\">{`false`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`{\n    \"override\":false\n}\n`}</code></pre>\n    <InlineAlert slots=\"text\" mdxType=\"InlineAlert\" />\nUnlike with the advance endpoint, listing individual metrics here is not required.\n    <h3 {...{\n      \"id\": \"cancel-build-security-test-performance-test-and-schedule-steps\"\n    }}>{`Cancel Build, Security Test, Performance Test, and Schedule Steps`}</h3>\n    <p>{`The body to cancel one of these running steps passes `}<inlineCode parentName=\"p\">{`cancel`}</inlineCode>{` as `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`{\n    \"cancel\":true\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"reject-go-live-approval\"\n    }}>{`Reject Go-Live Approval`}</h3>\n    <p>{`The body to reject a Go-Live Approval step passes `}<inlineCode parentName=\"p\">{`approved`}</inlineCode>{` as `}<inlineCode parentName=\"p\">{`false`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`{\n    \"approved\":false\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","InlineAlert","props","console","warn","mdx","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutPropertiesLoose","_excluded","_extends","mdxType","parentName","slots","href","isMDXComponent"],"sourceRoot":""}