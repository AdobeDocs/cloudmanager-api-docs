swagger: "2.0"
info:
  version: 1.0.0
  title: Cloud Manager API
  description: "This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/main/swagger-specs/api.yaml."
host: cloudmanager.adobe.io
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
tags:
  - name: Programs
  - name: Repositories
  - name: Branches
  - name: Pipelines
  - name: Pipeline Execution
  - name: Execution Artifacts
  - name: Environments
  - name: Region Deployments
  - name: Variables
  - name: Rapid Development Environments
  - name: Environment Restore From Backup
  - name: IP Allowlist
  - name: IP Allowlist Binding
  - name: Domain
  - name: Domain Mappings - CDN Configurations
  - name: SSL Certificates
  - name: EDS Sites
  - name: Tenants
  - name: Regions
  - name: Network infrastructure
  - name: Environment Advanced Networking Configuration
  - name: ContentSets
paths:
  /api/programs:
    get:
      tags:
        - Programs
      summary: Lists Programs
      description: "This API is deprecated and should no longer be used. Please use the [Lists Programs for Tenant API](#operation/getProgramsForTenant) instead."
      operationId: getPrograms
      parameters:
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/ProgramList"
  "/api/program/{programId}":
    get:
      tags:
        - Programs
      summary: Get Program
      description: Returns a program by its id
      operationId: getProgram
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: Successful retrieval of program
          schema:
            $ref: "#/definitions/Program"
        "404":
          description: Program not found
    delete:
      tags:
        - Programs
      summary: Delete Program
      description: Delete an program
      operationId: deleteProgram
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/Program"
        "202":
          description: Delete was successful.
          schema:
            $ref: "#/definitions/Program"
        "403":
          description: Forbidden.
        "404":
          description: Program not found.
        "412":
          description: Deletion not supported
  "/api/program/{programId}/repositories":
    get:
      tags:
        - Repositories
      summary: Lists Repositories
      description: Lists all Repositories in an program
      operationId: getRepositories
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: start
          in: query
          description: Pagination start parameter
          required: false
          type: string
          default: "0"
        - name: limit
          in: query
          description: Pagination limit parameter
          required: false
          type: integer
          default: 20
          format: int32
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/RepositoryList"
  "/api/program/{programId}/repository/{repositoryId}":
    get:
      tags:
        - Repositories
      summary: Get Repository
      description: Returns an repository by its id
      operationId: getRepository
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: repositoryId
          in: path
          description: Identifier of the repository
          required: true
          type: string
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/Repository"
  "/api/program/{programId}/repository/{repositoryId}/branches":
    get:
      tags:
        - Branches
      summary: List Branches
      description: Returns the list of branches from a repository
      operationId: getBranches
      parameters:
        - name: programId
          in: path
          description: Identifier of the program.
          required: true
          type: string
        - name: repositoryId
          in: path
          description: Identifier of the repository
          required: true
          type: string
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: Successful retrieval of the list of repository branches
          schema:
            $ref: "#/definitions/BranchList"
  "/api/program/{programId}/pipelines":
    get:
      tags:
        - Pipelines
      summary: List Pipelines
      description: Returns all the pipelines that the requesting user has access to in an program
      operationId: getPipelines
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: type
          in: query
          description: Type of the pipelines
          required: false
          type: string
        - name: start
          in: query
          description: Pagination start parameter
          required: false
          type: string
          default: "0"
        - name: limit
          in: query
          description: Pagination limit parameter
          required: false
          type: integer
          default: 500
          format: int32
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/PipelineList"
  "/api/program/{programId}/pipeline/{pipelineId}":
    get:
      tags:
        - Pipelines
      summary: Get Pipeline
      description: Returns a pipeline by its id
      operationId: getPipeline
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: pipelineId
          in: path
          description: Identifier of the pipeline
          required: true
          type: string
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: Successful retrieval of pipeline
          schema:
            $ref: "#/definitions/Pipeline"
        "404":
          description: Pipeline not found
    delete:
      tags:
        - Pipelines
      summary: Delete a Pipeline
      description: Delete a pipeline. All the data is wiped.
      operationId: deletePipeline
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: pipelineId
          in: path
          description: Identifier of the pipeline
          required: true
          type: string
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        default:
          description: successful operation
    patch:
      tags:
        - Pipelines
      summary: Patches Pipeline
      description: Patches a pipeline within an program.
      operationId: patchPipeline
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: pipelineId
          in: path
          description: Identifier of the pipeline
          required: true
          type: string
        - in: body
          name: body
          description: The update to the pipeline
          required: true
          schema:
            $ref: "#/definitions/PipelineUpdate"
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
        - name: Content-Type
          in: header
          description: Must always be application/json
          required: true
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/Pipeline"
  "/api/program/{programId}/pipeline/{pipelineId}/cache":
    delete:
      tags:
        - Pipelines
      summary: Invalidate Cache
      description: Remove all cached artifacts and resets the cache to an empty state.
      operationId: invalidateCache
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: pipelineId
          in: path
          description: Identifier of the pipeline
          required: true
          type: string
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        default:
          description: successful operation
  "/api/program/{programId}/pipeline/{pipelineId}/execution":
    get:
      tags:
        - Pipeline Execution
      summary: Get current pipeline execution
      description: Returns current pipeline execution if any.
      operationId: getCurrentExecution
      parameters:
        - name: programId
          in: path
          description: Identifier of the program.
          required: true
          type: string
        - name: pipelineId
          in: path
          description: Identifier of the pipeline
          required: true
          type: string
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: Successful retrieval of current execution
          schema:
            $ref: "#/definitions/PipelineExecution"
        "404":
          description: No pipeline execution exits or unknown pipeline or program
    put:
      tags:
        - Pipeline Execution
      summary: Start the pipeline
      description: Starts the Pipeline. This works only if the pipeline is not already started.
      operationId: startPipeline
      parameters:
        - name: programId
          in: path
          description: Identifier of the program.
          required: true
          type: string
        - name: pipelineId
          in: path
          description: Identifier of the pipeline
          required: true
          type: string
        - name: pipelineExecutionMode
          in: query
          description: The mode in which to run the execution. EMERGENCY mode will skip certain steps and is only available to select AMS customers.
          required: false
          type: string
          default: NORMAL
          enum:
            - NORMAL
            - EMERGENCY
        - name: stepId
          in: query
          description: Identifier of the step from which the re-execution will start
          required: false
          type: string
        - name: sourceExecutionId
          in: query
          description: Identifier of the source execution from which the execution will start
          required: false
          type: string
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
        - name: Content-Type
          in: header
          description: Must always be application/json
          required: true
          type: string
      responses:
        "201":
          description: Successfully started pipeline execution
          schema:
            $ref: "#/definitions/PipelineExecution"
          headers:
            location:
              type: string
              description: The URL of the new execution
        "400":
          description: Request conflicts with the expected state of pipeline
        "404":
          description: No pipeline execution exits or unknown pipeline or application
        "412":
          description: Pipeline is busy
        "503":
          description: Pipeline execution cannot be started because of unplanned maintenance
          schema:
            $ref: "#/definitions/SystemUnderMaintenanceExceptionMapper"
  "/api/program/{programId}/pipeline/{pipelineId}/execution/{executionId}":
    get:
      tags:
        - Pipeline Execution
      summary: Get pipeline execution
      description: Returns a pipeline execution by id
      operationId: getExecution
      parameters:
        - name: programId
          in: path
          description: Identifier of the program.
          required: true
          type: string
        - name: pipelineId
          in: path
          description: Identifier of the pipeline
          required: true
          type: string
        - name: executionId
          in: path
          description: Identifier of the execution
          required: true
          type: string
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: Successful retrieval of execution
          schema:
            $ref: "#/definitions/PipelineExecution"
        "404":
          description: No pipeline execution exits or unknown pipeline or application
  "/api/program/{programId}/pipeline/{pipelineId}/execution/{executionId}/phase/{phaseId}/step/{stepId}":
    get:
      tags:
        - Pipeline Execution
      summary: Get step state
      description: ""
      operationId: stepState
      parameters:
        - name: programId
          in: path
          description: Identifier of the program.
          required: true
          type: string
        - name: pipelineId
          in: path
          description: Identifier of the pipeline
          required: true
          type: string
        - name: executionId
          in: path
          description: Identifier of the execution
          required: true
          type: string
        - name: phaseId
          in: path
          description: Identifier of the phase
          required: true
          type: string
        - name: stepId
          in: path
          description: Identifier of the step
          required: true
          type: string
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: Successful retrieval of step state
          schema:
            $ref: "#/definitions/PipelineExecutionStepState"
        "403":
          description: Missing permission for user to read step
        "404":
          description: Pipeline execution does not exist
  "/api/program/{programId}/pipeline/{pipelineId}/execution/{executionId}/phase/{phaseId}/step/{stepId}/advance":
    put:
      tags:
        - Pipeline Execution
      summary: Advance
      description: "Post to this url in order to advance the current pipeline execution, if paused and waiting for user interaction. Link is present in output only in that case. The input depends on the actual reason for which the pipeline execution stopped."
      operationId: advancePipelineExecution
      parameters:
        - name: programId
          in: path
          description: Identifier of the program.
          required: true
          type: string
        - name: pipelineId
          in: path
          description: Identifier of the pipeline
          required: true
          type: string
        - name: executionId
          in: path
          description: Identifier of the execution
          required: true
          type: string
        - name: phaseId
          in: path
          description: Identifier of the phase
          required: true
          type: string
        - name: stepId
          in: path
          description: Identifier of the step
          required: true
          type: string
        - in: body
          name: body
          description: "Input for advance. See documentation at https://www.adobe.io/experience-cloud/cloud-manager/guides/api-usage/advancing-and-cancelling-steps/ for details."
          required: true
          schema:
            type: object
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
        - name: Content-Type
          in: header
          description: Must always be application/json
          required: true
          type: string
      responses:
        "202":
          description: Successful resume of pipeline execution
        "403":
          description: Missing permission for user to advance the pipeline execution
        "404":
          description: No pipeline execution exits or unknown pipeline or program
  "/api/program/{programId}/pipeline/{pipelineId}/execution/{executionId}/phase/{phaseId}/step/{stepId}/cancel":
    put:
      tags:
        - Pipeline Execution
      summary: Cancel
      description: Post to this url in order to cancel the current pipeline execution. Link is present in output only in that case.
      operationId: cancelPipelineExecutionStep
      parameters:
        - name: programId
          in: path
          description: Identifier of the program.
          required: true
          type: string
        - name: pipelineId
          in: path
          description: Identifier of the pipeline
          required: true
          type: string
        - name: executionId
          in: path
          description: Identifier of the execution
          required: true
          type: string
        - name: phaseId
          in: path
          description: Identifier of the phase
          required: true
          type: string
        - name: stepId
          in: path
          description: Identifier of the step
          required: true
          type: string
        - in: body
          name: body
          description: "Input for cancel. See documentation at https://www.adobe.io/experience-cloud/cloud-manager/guides/api-usage/advancing-and-cancelling-steps/ for details."
          required: true
          schema:
            type: object
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
        - name: Content-Type
          in: header
          description: Must always be application/json
          required: true
          type: string
      responses:
        "202":
          description: Successful cancel of pipeline execution
        "403":
          description: Missing permission for user to cancel the current pipeline execution
        "404":
          description: No pipeline execution exits or unknown pipeline or program
  "/api/program/{programId}/pipeline/{pipelineId}/execution/{executionId}/phase/{phaseId}/step/{stepId}/logs":
    get:
      tags:
        - Pipeline Execution
      summary: Get logs
      description: Get the logs associated with a step.
      operationId: getStepLogs
      parameters:
        - name: programId
          in: path
          description: Identifier of the program.
          required: true
          type: string
        - name: pipelineId
          in: path
          description: Identifier of the pipeline
          required: true
          type: string
        - name: executionId
          in: path
          description: Identifier of the execution
          required: true
          type: string
        - name: phaseId
          in: path
          description: Identifier of the phase
          required: true
          type: string
        - name: stepId
          in: path
          description: Identifier of the step
          required: true
          type: string
        - name: file
          in: query
          description: Identifier of the log file
          required: false
          type: string
        - name: Accept
          in: header
          required: false
          type: string
          description: "Specify application/json in this header to receive a JSON response. Otherwise, a 307 response code will be returned with a Location header."
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: Successful retrieval of logs
          schema:
            $ref: "#/definitions/Redirect"
        "403":
          description: Missing permission for user to read logs
        "404":
          description: Pipeline execution does not exist
  "/api/program/{programId}/pipeline/{pipelineId}/execution/{executionId}/phase/{phaseId}/step/{stepId}/artifacts":
    get:
      tags:
        - Execution Artifacts
      summary: ListArtifacts
      description: Get the list of artifacts associated with a step.
      operationId: listStepArtifacts
      parameters:
        - name: programId
          in: path
          description: Identifier of the program.
          required: true
          type: string
        - name: pipelineId
          in: path
          description: Identifier of the pipeline
          required: true
          type: string
        - name: executionId
          in: path
          description: Identifier of the execution
          required: true
          type: string
        - name: phaseId
          in: path
          description: Identifier of the phase
          required: true
          type: string
        - name: stepId
          in: path
          description: Identifier of the step
          required: true
          type: string
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: Successful retrieval of artifacts list
          schema:
            $ref: "#/definitions/ArtifactList"
        "403":
          description: Missing permission for user to read artifacts
        "404":
          description: Pipeline execution does not exist
  "/api/program/{programId}/pipeline/{pipelineId}/execution/{executionId}/phase/{phaseId}/step/{stepId}/artifact/{artifactId}":
    get:
      tags:
        - Execution Artifacts
      summary: GetArtifact
      description: Get artifact.
      operationId: getStepArtifact
      parameters:
        - name: programId
          in: path
          description: Identifier of the program.
          required: true
          type: string
        - name: pipelineId
          in: path
          description: Identifier of the pipeline
          required: true
          type: string
        - name: executionId
          in: path
          description: Identifier of the execution
          required: true
          type: string
        - name: phaseId
          in: path
          description: Identifier of the phase
          required: true
          type: string
        - name: stepId
          in: path
          description: Identifier of the step
          required: true
          type: string
        - name: artifactId
          in: path
          description: Identifier of the artifact
          required: true
          type: string
        - name: Accept
          in: header
          required: false
          type: string
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: Successful retrieval of artifact
        "403":
          description: Missing permission for user to read artifact
        "404":
          description: Pipeline execution does not exist
  "/api/program/{programId}/pipeline/{pipelineId}/execution/{executionId}/phase/{phaseId}/step/{stepId}/metrics":
    get:
      tags:
        - Pipeline Execution
      summary: Get step metrics
      description: ""
      operationId: stepMetric
      parameters:
        - name: programId
          in: path
          description: Identifier of the program.
          required: true
          type: string
        - name: pipelineId
          in: path
          description: Identifier of the pipeline
          required: true
          type: string
        - name: executionId
          in: path
          description: Identifier of the execution
          required: true
          type: string
        - name: phaseId
          in: path
          description: Identifier of the phase
          required: true
          type: string
        - name: stepId
          in: path
          description: Identifier of the step
          required: true
          type: string
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: Successful retrieval of metrics
          schema:
            $ref: "#/definitions/PipelineStepMetrics"
        "403":
          description: Missing permission for user to read metrics
        "404":
          description: Pipeline execution does not exist
  "/api/program/{programId}/pipeline/{pipelineId}/executions":
    get:
      tags:
        - Pipeline Execution
      summary: List Executions
      description: Returns the history of pipeline executions in a newest to oldest order
      operationId: getExecutions
      parameters:
        - name: programId
          in: path
          description: Identifier of the program.
          required: true
          type: string
        - name: pipelineId
          in: path
          description: Identifier of the pipeline
          required: true
          type: string
        - name: start
          in: query
          description: Pagination start parameter
          required: false
          type: string
        - name: limit
          in: query
          description: Pagination limit parameter
          required: false
          type: integer
          format: int32
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: Successful retrieval of execution history
          schema:
            $ref: "#/definitions/PipelineExecutionListRepresentation"
        "403":
          description: Missing permission for user to read executions
        "404":
          description: Pipeline does not exist
  "/api/program/{programId}/environments":
    get:
      tags:
        - Environments
      summary: List Environments
      description: Lists all environments in an program
      operationId: getEnvironments
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: type
          in: query
          description: Type of the environment
          required: false
          type: string
          enum:
            - dev
            - stage
            - prod
            - rde
            - preprod
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: Successful retrieval of environment list
          schema:
            $ref: "#/definitions/EnvironmentList"
        "404":
          description: Program not found
    post:
      tags:
        - Environments
      summary: Create or clone Environment
      description: Create Environment
      operationId: createEnvironment
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - in: body
          name: body
          description: Environment
          required: true
          schema:
            $ref: "#/definitions/NewEnvironment"
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
        - name: Content-Type
          in: header
          description: Must always be application/json
          required: true
          type: string
      responses:
        "201":
          description: Environment created
          schema:
            $ref: "#/definitions/Environment"
        "400":
          description: Bad request
  "/api/program/{programId}/environment/{environmentId}":
    get:
      tags:
        - Environments
      summary: Get Environment
      description: Returns an environment by its id
      operationId: getEnvironment
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: environmentId
          in: path
          description: Identifier of the environment
          required: true
          type: string
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/Environment"
    delete:
      tags:
        - Environments
      summary: DeleteEnvironment
      description: Delete environment
      operationId: deleteEnvironment
      parameters:
        - name: programId
          in: path
          description: Identifier of the application
          required: true
          type: string
        - name: environmentId
          in: path
          description: Identifier of the environment
          required: true
          type: string
        - name: ignoreResourcesDeletionResult
          in: query
          description: "Ignore Resources Deletion Result option, delete flow does not fail if resources could not be deleted"
          required: false
          type: boolean
          default: false
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "201":
          description: Environment deleted
          schema:
            $ref: "#/definitions/Environment"
        "400":
          description: Environment deletion in progress
          schema:
            $ref: "#/definitions/BadRequestError"
        "404":
          description: Environment not found
  "/api/program/{programId}/environment/{environmentId}/regionDeployments/{regionDeploymentId}":
    get:
      tags:
        - Region Deployments
      summary: Get Region Deployment
      description: Return a region deployment by its id
      operationId: getRegionDeployment
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: environmentId
          in: path
          description: Identifier of the environment
          required: true
          type: string
        - name: regionDeploymentId
          in: path
          description: Identifier of the regionDeployment
          required: true
          type: string
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: Successful retrieval of the region deployment for the environment
          schema:
            $ref: "#/definitions/RegionDeployment"
  "/api/program/{programId}/environment/{environmentId}/regionDeployments":
    get:
      tags:
        - Region Deployments
      summary: Get Region Deployments
      description: List the region deployments for an environment
      operationId: getRegionDeployments
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: environmentId
          in: path
          description: Identifier of the environment
          required: true
          type: string
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: Successful retrieval of the region deployments for the environment
          schema:
            $ref: "#/definitions/RegionDeploymentList"
    post:
      tags:
        - Region Deployments
      summary: Create Region Deployment
      description: Add region deployments in an environment
      operationId: createRegionDeployment
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: environmentId
          in: path
          description: Identifier of an environment
          required: true
          type: string
        - in: body
          name: body
          description: RegionDeployment
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/NewRegionDeployment"
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
        - name: Content-Type
          in: header
          description: Must always be application/json
          required: true
          type: string
      responses:
        "201":
          description: Region deployment created
          schema:
            $ref: "#/definitions/RegionDeploymentList"
        "400":
          description: Bad request
    patch:
      tags:
        - Region Deployments
      summary: Patch Region Deployment
      description: Remove region deployments from an environment
      operationId: patchRegionDeployment
      parameters:
        - name: programId
          in: path
          description: Identifier of the application
          required: true
          type: string
        - name: environmentId
          in: path
          description: Identifier of the environment
          required: true
          type: string
        - in: body
          name: body
          description: RegionDeployment
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/RegionDeploymentDeletion"
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
        - name: Content-Type
          in: header
          description: Must always be application/json
          required: true
          type: string
      responses:
        "202":
          description: Region Deployment Modification request accepted
          schema:
            $ref: "#/definitions/RegionDeploymentList"
        "400":
          description: Region Deployment Modification bad request
          schema:
            $ref: "#/definitions/BadRequestError"
        "404":
          description: Region deployment not found for the given identifier
  "/api/program/{programId}/environment/{environmentId}/logs":
    get:
      tags:
        - Environments
      summary: Get Environment Logs
      description: List all logs available in environment
      operationId: getEnvironmentLogs
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: environmentId
          in: path
          description: Identifier of the environment
          required: true
          type: string
        - name: service
          in: query
          description: Names of services
          required: true
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: name
          in: query
          description: Names of log
          required: true
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: days
          in: query
          description: number of days for which logs are required
          required: true
          type: integer
          format: int32
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: Successful retrieval of logs for an environment
          schema:
            $ref: "#/definitions/EnvironmentLogs"
        "400":
          description: invalid parameters
          schema:
            $ref: "#/definitions/BadRequestError"
        "404":
          description: Environment not found
  "/api/program/{programId}/environment/{environmentId}/logs/download":
    get:
      tags:
        - Environments
      summary: Download Logs
      description: Download environment logs
      operationId: downloadLogs
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: environmentId
          in: path
          description: Identifier of the environment
          required: true
          type: string
        - name: service
          in: query
          description: Name of service
          required: true
          type: string
        - name: name
          in: query
          description: Name of log
          required: true
          type: string
        - name: date
          in: query
          description: date for which log is required
          required: true
          type: string
          format: date
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
        - name: Accept
          required: false
          type: string
          description: "Specify application/json in this header to receive a JSON response. Otherwise, a 307 response code will be returned with a Location header."
          in: header
      responses:
        "200":
          description: Successful retrieval of logs
          schema:
            $ref: "#/definitions/Redirect"
        "400":
          description: invalid parameters
          schema:
            $ref: "#/definitions/BadRequestError"
        "404":
          description: Environment not found
  "/api/program/{programId}/environment/{environmentId}/variables":
    get:
      tags:
        - Variables
      summary: List User Environment Variables
      description: List the user defined variables for an environment (Cloud Service only).
      operationId: getEnvironmentVariables
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
          x-example: "2351"
        - name: environmentId
          in: path
          description: Identifier of the environment
          required: true
          type: string
          x-example: "128"
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: Successful retrieval of environment variables
          schema:
            $ref: "#/definitions/VariableList"
        "404":
          description: Environment not found
    patch:
      tags:
        - Variables
      summary: Patch User Environment Variables
      description: "Modify multiple environment variables (Cloud Service only). To delete a variable, include it with an empty value."
      operationId: patchEnvironmentVariables
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: environmentId
          in: path
          description: Identifier of the environment
          required: true
          type: string
        - in: body
          name: body
          description: "The list of variables to add, modify, or remove. It is not necessary to send variables here which are not changing. The length of `secretString` values must be less than 500 characters."
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/EnvironmentVariableUpdate"
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
        - name: Content-Type
          in: header
          description: Must always be application/json
          required: true
          type: string
      responses:
        "204":
          description: Successful setting of variables
        "404":
          description: Environment not found
  "/api/program/{programId}/environment/{environmentId}/reset":
    put:
      tags:
        - Rapid Development Environments
      summary: Reset Rapid Development Environment
      description: Reset Rapid Development Environment. Also updates the RDE to the latest AEM release.
      operationId: resetRde
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: environmentId
          in: path
          description: Identifier of the environment
          required: true
          type: string
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "202":
          description: Successfully reset RDE
        "404":
          description: Environment not found
  "/api/program/{programId}/environment/{environmentId}/restorePoints":
    get:
      tags:
        - Environment Restore From Backup
      summary: Get Restore Points
      description: List the backups available for this environment (Cloud Service only)
      operationId: getRestorePoints
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: environmentId
          in: path
          description: Identifier of the environment
          required: true
          type: string
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: Successful retrieval of restore points for an environment
          schema:
            $ref: "#/definitions/RestorePointsList"
        "404":
          description: Resource not found
  "/api/program/{programId}/environment/{environmentId}/restoreExecution/{restoreId}":
    get:
      tags:
        - Environment Restore From Backup
      summary: Get Restore Execution
      description: Returns a restore execution by its id (Cloud Service only)
      operationId: getRestoreExecution
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: environmentId
          in: path
          description: Identifier of the environment
          required: true
          type: string
        - name: restoreId
          in: path
          description: Identifier of the restore execution
          required: true
          type: string
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/RestoreExecution"
  "/api/program/{programId}/environment/{environmentId}/restoreExecution/{restoreId}/logs":
    get:
      tags:
        - Environment Restore From Backup
      summary: Get Restore Execution Logs
      description: Gets the logs of a Restore Execution (Cloud Service only)
      operationId: getRestoreExecutionLogs
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: environmentId
          in: path
          description: Identifier of the environment
          required: true
          type: string
        - name: restoreId
          in: path
          description: Identifier of the restore execution
          required: true
          type: string
        - name: Accept
          in: header
          required: false
          type: string
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        default:
          description: successful operation
  "/api/program/{programId}/environment/{environmentId}/restoreExecutions":
    get:
      tags:
        - Environment Restore From Backup
      summary: Lists Restore Executions
      description: List the Restore Executions of an environment (Cloud Service only)
      operationId: getRestoreExecutions
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: environmentId
          in: path
          description: Identifier of the environment
          required: true
          type: string
        - name: start
          in: query
          description: Pagination start parameter
          required: false
          type: string
          default: "0"
        - name: limit
          in: query
          description: Pagination limit parameter
          required: false
          type: integer
          default: 5
          format: int32
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/RestoreExecutionList"
  "/api/program/{programId}/environment/{environmentId}/restoreExecution":
    put:
      tags:
        - Environment Restore From Backup
      summary: Start a Restore Execution
      description: Start a Restore from Backup execution (Cloud Service only)
      operationId: restoreExecution
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: environmentId
          in: path
          description: Identifier of the environment
          required: true
          type: string
        - in: body
          name: body
          description: Restore Parameters Representation
          required: false
          schema:
            $ref: "#/definitions/RestoreParamRepresentation"
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
        - name: Content-Type
          in: header
          description: Must always be application/json
          required: true
          type: string
      responses:
        "200":
          description: Environment restore in progress
          schema:
            $ref: "#/definitions/RestoreExecution"
        "404":
          description: Environment not found
        "412":
          description: Restore precondition failed
  "/api/program/{programId}/pipeline/{pipelineId}/variables":
    get:
      tags:
        - Variables
      summary: List User Pipeline Variables
      description: List the user defined variables for an pipeline.
      operationId: getPipelineVariables
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
          x-example: "2351"
        - name: pipelineId
          in: path
          description: Identifier of the pipeline
          required: true
          type: string
          x-example: "128"
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: Successful retrieval of pipeline variables
          schema:
            $ref: "#/definitions/VariableList"
        "404":
          description: Pipeline not found
    patch:
      tags:
        - Variables
      summary: Patch User Pipeline Variables
      description: "Modify multiple pipeline variables. To delete a variable, include it with an empty value."
      operationId: patchPipelineVariables
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: pipelineId
          in: path
          description: Identifier of the pipeline
          required: true
          type: string
        - in: body
          name: body
          description: "The list of variables to add, modify, or remove. It is not necessary to send variables here which are not changing. The length of `secretString` values must be less than 500 characters."
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/PipelineVariableUpdate"
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
        - name: Content-Type
          in: header
          description: Must always be application/json
          required: true
          type: string
      responses:
        "204":
          description: Successful setting of variables
        "404":
          description: Pipeline not found
  "/api/program/{programId}/ipAllowlist/{ipAllowlistId}":
    get:
      tags:
        - IP Allowlist
      summary: Get IP Allowlist
      description: Returns an IP Allowlist based on program and id
      operationId: getIPAllowlist
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: ipAllowlistId
          in: path
          description: Identifier of the IP Allowlist
          required: true
          type: string
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: Successful retrieval of IP Allowlist
          schema:
            $ref: "#/definitions/IPAllowedList"
        "404":
          description: Resource not found
    put:
      tags:
        - IP Allowlist
      summary: Update IP Allowlist
      description: Updates an IP Allowlist for the program with specified values
      operationId: updateIPAllowlist
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: ipAllowlistId
          in: path
          description: Identifier of the IP Allowlist
          required: true
          type: string
        - in: body
          name: body
          description: IP Allowlist
          required: true
          schema:
            $ref: "#/definitions/Updateanipallowlist"
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
        - name: Content-Type
          in: header
          description: Must always be application/json
          required: true
          type: string
      responses:
        "200":
          description: IP Allowlist updated
          schema:
            $ref: "#/definitions/IPAllowedList"
        "400":
          description: The request is malformed.
        "404":
          description: Resource not found
    delete:
      tags:
        - IP Allowlist
      summary: Delete IP Allowlist
      description: Deletes the IP Allowlist for the program
      operationId: deleteIPAllowlist
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: ipAllowlistId
          in: path
          description: Identifier of the IP Allowlist
          required: true
          type: string
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "202":
          description: Delete was successful
          schema:
            $ref: "#/definitions/IPAllowedList"
        "404":
          description: Resource not found
  "/api/program/{programId}/ipAllowlist/{ipAllowlistId}/binding/{ipAllowlistBindingId}":
    get:
      tags:
        - IP Allowlist Binding
      summary: Get IP Allowlist binding
      description: Returns an IP Allowlist binding based on program and IP allowlist id
      operationId: getIPAllowlistBinding
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: ipAllowlistId
          in: path
          description: Identifier of the IP Allowlist
          required: true
          type: string
        - name: ipAllowlistBindingId
          in: path
          description: Identifier of the IP Allowlist Binding
          required: true
          type: string
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: Successful retrieval of IP Allowlist
          schema:
            $ref: "#/definitions/IPAllowedListBinding"
        "404":
          description: IP Allowlist not found
    delete:
      tags:
        - IP Allowlist Binding
      summary: Delete IP Allowlist binding
      description: Deletes the IP Allowlist binding for the program and IP Allowlist id
      operationId: deleteIPAllowlistBinding
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: ipAllowlistId
          in: path
          description: Identifier of the IP Allowlist
          required: true
          type: string
        - name: ipAllowlistBindingId
          in: path
          description: Identifier of the IP Allowlist binding
          required: true
          type: string
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "202":
          description: Delete was successful
          schema:
            $ref: "#/definitions/IPAllowedListBinding"
        "404":
          description: IP Allowlist not found
  "/api/program/{programId}/ipAllowlist/{ipAllowlistId}/bindings":
    get:
      tags:
        - IP Allowlist Binding
      summary: Lists IP Allowlist bindings
      description: Returns all IP Allowlists bindings for an IpAllowList of a program
      operationId: getIPAllowlistBindings
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: ipAllowlistId
          in: path
          description: Identifier of the IP Allowlist
          required: true
          type: string
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: The list of IP Allowlists assigned to the program
          schema:
            $ref: "#/definitions/IPAllowlistBindingsList"
        "404":
          description: IP Allowlist not found
    post:
      tags:
        - IP Allowlist Binding
      summary: Creates an IP Allowlist binding
      description: Creates an IP Allowlist binding to an environment for a specific tier
      operationId: createIPAllowlistBinding
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: ipAllowlistId
          in: path
          description: Identifier of the IP Allowlist
          required: true
          type: string
        - in: body
          name: body
          description: IP Allowlist binding
          required: true
          schema:
            $ref: "#/definitions/IPAllowedListBinding"
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
        - name: Content-Type
          in: header
          description: Must always be application/json
          required: true
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/IPAllowedListBinding"
        "201":
          description: IP Allowlist binding created
          schema:
            $ref: "#/definitions/IPAllowedListBinding"
        "400":
          description: The request is malformed.
        "404":
          description: Environment not found
        "412":
          description: Creating IP Allowlists for non cloud programs is not supported
  "/api/program/{programId}/ipAllowlists":
    get:
      tags:
        - IP Allowlist
      summary: Lists IP Allowlists
      description: Returns all IP Allowlists that are defined for this program
      operationId: getProgramIPAllowlists
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: The list of IP Allowlists assigned to the program
          schema:
            $ref: "#/definitions/IPAllowlistList"
        "404":
          description: Program not found
    post:
      tags:
        - IP Allowlist
      summary: Creates an IP Allowlist
      description: Creates an IP Allowlist for the program with specified values
      operationId: createIPAllowlist
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - in: body
          name: body
          description: IP Allowlist
          required: true
          schema:
            $ref: "#/definitions/Createanewipallowlist"
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
        - name: Content-Type
          in: header
          description: Must always be application/json
          required: true
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/IPAllowedList"
        "201":
          description: IP Allowlist created
          schema:
            $ref: "#/definitions/IPAllowedList"
        "400":
          description: The request is malformed.
        "404":
          description: Program not found
        "412":
          description: Creating IP Allowlists for non cloud programs is not supported
  "/api/program/{programId}/domains":
    get:
      tags:
        - Domain
      summary: Get list of domains
      description: ""
      operationId: getDomain
      parameters:
        - name: programId
          in: path
          description: Identifier of program id
          required: true
          type: string
        - name: name
          in: query
          description: Domain name
          required: false
          type: string
        - name: anyVerified
          in: query
          description: Filter any verified
          required: false
          type: boolean
        - name: isTxt
          in: query
          description: Is TXT verified
          required: false
          type: boolean
        - name: isAcme
          in: query
          description: Is ACME verified
          required: false
          type: boolean
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: List of domains received
          schema:
            $ref: "#/definitions/Domain"
    post:
      tags:
        - Domain
      summary: Create a domain
      description: ""
      operationId: createDomain
      parameters:
        - name: programId
          in: path
          description: Identifier of program
          required: true
          type: string
        - in: body
          name: body
          description: Payload for creating a domain
          required: true
          schema:
            $ref: "#/definitions/DomainCreate"
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
        - name: Content-Type
          in: header
          description: Must always be application/json
          required: true
          type: string
      responses:
        "200":
          description: Domain created
          schema:
            $ref: "#/definitions/Domain"
        "404":
          description: Program not found
        "409":
          description: Domain already exists
  "/api/program/{programId}/domain/{domain-id}":
    get:
      tags:
        - Domain
      summary: Get domain
      description: ""
      operationId: getDomain
      parameters:
        - name: programId
          in: path
          description: Identifier of program id
          required: true
          type: string
        - name: domain-id
          in: path
          description: Identifier of domain id
          required: true
          type: string
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: Domain received
          schema:
            $ref: "#/definitions/Domain"
        "404":
          description: Domain not found
    put:
      tags:
        - Domain
      summary: Update domain
      description: ""
      operationId: modifyDomain
      parameters:
        - name: programId
          in: path
          description: Identifier of program id
          required: true
          type: string
        - name: domain-id
          in: path
          description: Identifier of domain id
          required: true
          type: string
        - in: body
          name: body
          description: Domain Update Body
          required: true
          schema:
            $ref: "#/definitions/UpdateaDomain"
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
        - name: Content-Type
          in: header
          description: Must always be application/json
          required: true
          type: string
      responses:
        "200":
          description: Domain updated
          schema:
            $ref: "#/definitions/Domain"
        "404":
          description: Program not found
    delete:
      tags:
        - Domain
      summary: Delete a domain
      description: ""
      operationId: deleteDomain
      parameters:
        - name: programId
          in: path
          description: Identifier of program id
          required: true
          type: string
        - name: domain-id
          in: path
          description: Identifier of domain id
          required: true
          type: string
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: Domain deleted
          schema:
            $ref: "#/definitions/Response"
  "/api/program/{programId}/domain/{domain-id}/validate":
    put:
      tags:
        - Domain
      summary: Check validation
      description: ""
      operationId: domainValidationToken
      parameters:
        - name: programId
          in: path
          description: Identifier of program id
          required: true
          type: string
        - name: domain-id
          in: path
          description: Identifier of domain id
          required: true
          type: string
        - in: body
          name: body
          description: Payload for validation operation
          required: true
          schema:
            $ref: "#/definitions/DomainTokenValidationBody"
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
        - name: Content-Type
          in: header
          description: Must always be application/json
          required: true
          type: string
      responses:
        "200":
          description: Validation is completed
          schema:
            $ref: "#/definitions/Domain"
        "404":
          description: Program not found
  "/api/program/{programId}/domain/{domain-id}/validation":
    post:
      tags:
        - Domain
      summary: Creates validation token
      description: ""
      operationId: domainValidationToken
      parameters:
        - name: programId
          in: path
          description: Identifier of program id
          required: true
          type: string
        - name: domain-id
          in: path
          description: Identifier of domain id
          required: true
          type: string
        - in: body
          name: body
          description: Payload for validation operation
          required: true
          schema:
            $ref: "#/definitions/DomainTokenValidationBody"
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
        - name: Content-Type
          in: header
          description: Must always be application/json
          required: true
          type: string
      responses:
        "200":
          description: Created validation token
          schema:
            $ref: "#/definitions/Domain"
        "404":
          description: Program Not found
  "/api/program/{programId}/domain-mapping/{domainMappingId}":
    get:
      tags:
        - Domain Mappings - CDN Configurations
      summary: Get domain mapping
      description: ""
      operationId: getDomainMappingById
      parameters:
        - name: programId
          in: path
          description: Identifier of program
          required: true
          type: integer
          format: int64
        - name: domainMappingId
          in: path
          description: Identifier of domain mapping
          required: true
          type: integer
          format: int64
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: Domain Mapping retrieved
          schema:
            $ref: "#/definitions/DomainMapping"
        "404":
          description: Domain Mapping not found
    put:
      tags:
        - Domain Mappings - CDN Configurations
      summary: Update domain mapping
      description: ""
      operationId: updateDomainMapping
      parameters:
        - name: programId
          in: path
          description: Identifier of program
          required: true
          type: integer
          format: int64
        - name: domainMappingId
          in: path
          description: Identifier of domain mapping
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: Payload for updating a domain mapping
          required: true
          schema:
            $ref: "#/definitions/Updateadomainmapping"
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
        - name: Content-Type
          in: header
          description: Must always be application/json
          required: true
          type: string
      responses:
        "200":
          description: Domain Mapping updated
          schema:
            $ref: "#/definitions/DomainMapping"
        "404":
          description: Domain Mapping not found
    delete:
      tags:
        - Domain Mappings - CDN Configurations
      summary: Delete domain mapping
      description: ""
      operationId: deleteDomainMapping
      parameters:
        - name: programId
          in: path
          description: Identifier of program
          required: true
          type: integer
          format: int64
        - name: domainMappingId
          in: path
          description: Identifier of domain mapping
          required: true
          type: integer
          format: int64
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: Domain Mapping deleted
          schema:
            $ref: "#/definitions/DomainMapping"
        "404":
          description: Domain Mapping not found
  "/api/program/{programId}/domain-mapping/{domainMappingId}/verify":
    put:
      tags:
        - Domain Mappings - CDN Configurations
      summary: Check if customer made the required DNS changes
      description: ""
      operationId: validateHelixDomain
      parameters:
        - name: programId
          in: path
          description: Identifier of program
          required: true
          type: integer
          format: int64
        - name: domainMappingId
          in: path
          description: Identifier of domain mapping
          required: true
          type: integer
          format: int64
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: DNS changes were successfully made
          schema:
            $ref: "#/definitions/DomainMapping"
        "404":
          description: Program not found
  "/api/program/{programId}/domain-mappings":
    get:
      tags:
        - Domain Mappings - CDN Configurations
      summary: List of domain mappings
      description: ""
      operationId: getAllDomainMappingsByProgramId
      parameters:
        - name: programId
          in: path
          description: Identifier of program
          required: true
          type: integer
          format: int64
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: List of domain mappings retrieved
          schema:
            $ref: "#/definitions/DomainMappingList"
    post:
      tags:
        - Domain Mappings - CDN Configurations
      summary: Create domain mapping
      description: ""
      operationId: createDomainMapping
      parameters:
        - name: programId
          in: path
          description: Identifier of program
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: Payload for creating a domain mapping
          required: true
          schema:
            $ref: "#/definitions/Createanewdomainmapping"
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
        - name: Content-Type
          in: header
          description: Must always be application/json
          required: true
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/DomainMapping"
        "201":
          description: Domain Mapping created
          schema:
            $ref: "#/definitions/DomainMapping"
  "/api/program/{programId}/environment/{environmentId}/domain-mappings":
    get:
      tags:
        - Domain Mappings - CDN Configurations
      summary: List of domain mappings by environment
      description: ""
      operationId: getAllDomainMappingsByProgramIdAndEnvironmentId
      parameters:
        - name: programId
          in: path
          description: Identifier of program
          required: true
          type: integer
          format: int64
        - name: environmentId
          in: path
          description: Identifier of environment
          required: true
          type: integer
          format: int64
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: List of domain mappings by environment retrieved
          schema:
            $ref: "#/definitions/DomainMappingList"
  "/api/program/{programId}/site/{siteId}/domain-mappings":
    get:
      tags:
        - Domain Mappings - CDN Configurations
      summary: List of domain mappings by EDS site
      description: ""
      operationId: getAllDomainMappingsByProgramIdAndSiteId
      parameters:
        - name: programId
          in: path
          description: Identifier of program
          required: true
          type: integer
          format: int64
        - name: siteId
          in: path
          description: Identifier of EDS site
          required: true
          type: integer
          format: int64
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: List of domain mappings by environment retrieved
          schema:
            $ref: "#/definitions/DomainMappingList"
  "/api/program/{programId}/certificate/{certificateId}":
    get:
      tags:
        - SSL Certificates
      summary: Get certificate by ID
      description: ""
      operationId: getCertificateByIdAndProgramId
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: integer
          format: int64
        - name: certificateId
          in: path
          description: Identifier of the certificate
          required: true
          type: integer
          format: int64
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: Certificate retrieved
          schema:
            $ref: "#/definitions/SslCertificateRepresentation"
        "404":
          description: Certificate not found
          schema:
            $ref: "#/definitions/SslCertificateNotFoundException"
    put:
      tags:
        - SSL Certificates
      summary: Update certificate
      description: ""
      operationId: updateCertificate
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: integer
          format: int64
        - name: certificateId
          in: path
          description: Identifier of the certificate
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: Payload for updating the certificate
          required: true
          schema:
            $ref: "#/definitions/CreateOrUpdateSslCertificateBody"
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
        - name: Content-Type
          in: header
          description: Must always be application/json
          required: true
          type: string
      responses:
        "200":
          description: Certificate updated
          schema:
            $ref: "#/definitions/SslCertificateRepresentation"
        "404":
          description: Certificate not found
          schema:
            $ref: "#/definitions/SslCertificateNotFoundException"
    delete:
      tags:
        - SSL Certificates
      summary: Delete a certificate
      description: ""
      operationId: deleteCertificate
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: integer
          format: int64
        - name: certificateId
          in: path
          description: Identifier of the certificate
          required: true
          type: integer
          format: int64
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: Certificate deleted
          schema:
            $ref: "#/definitions/SslCertificateRepresentation"
        "404":
          description: Certificate not found
          schema:
            $ref: "#/definitions/SslCertificateNotFoundException"
  "/api/program/{programId}/certificates":
    get:
      tags:
        - SSL Certificates
      summary: Get all certificates
      description: ""
      operationId: getAllCertificatesForProgram
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: integer
          format: int64
        - name: start
          in: query
          description: Pagination start parameter
          required: false
          type: string
          default: "0"
        - name: limit
          in: query
          description: Pagination limit parameter
          required: false
          type: integer
          default: 20
          format: int32
        - name: status
          in: query
          description: Filter statuses separated by comma
          required: false
          type: string
          enum:
            - VALID
            - PENDING
            - EXPIRED
        - name: name
          in: query
          description: Certificate name
          required: false
          type: string
        - name: sslCertificateType
          in: query
          description: Certificate types separated by comma.
          required: false
          type: string
          enum:
            - DV
            - EV
            - OV
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: Certificate list retrieved
          schema:
            $ref: "#/definitions/AllSSLCertificatesList"
    post:
      tags:
        - SSL Certificates
      summary: Create SSL certificate
      description: ""
      operationId: createSslCertificate
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: Payload for creating the certificate
          required: true
          schema:
            $ref: "#/definitions/CreateOrUpdateSslCertificateBody"
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
        - name: Content-Type
          in: header
          description: Must always be application/json
          required: true
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/SslCertificateRepresentation"
        "201":
          description: SSL certificate created
          schema:
            $ref: "#/definitions/SslCertificateRepresentation"
  "/api/program/{programId}/dv-certificates":
    post:
      tags:
        - SSL Certificates
      summary: Create DV certificate
      description: ""
      operationId: createDvCertificate
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: Payload for creating the DV certificate
          required: true
          schema:
            $ref: "#/definitions/CreateDvCertificateBody"
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
        - name: Content-Type
          in: header
          description: Must always be application/json
          required: true
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/SslCertificate"
        "201":
          description: Created DV certificate
          schema:
            $ref: "#/definitions/SslCertificate"
  "/api/program/{programId}/site/{siteId}":
    get:
      tags:
        - EDS Sites
      summary: Get Site by Id
      description: ""
      operationId: retrieveSite
      parameters:
        - name: programId
          in: path
          required: true
          type: string
        - name: siteId
          in: path
          required: true
          type: integer
          format: int64
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: Site retrieved
          schema:
            $ref: "#/definitions/Site"
        "404":
          description: Site could not be found
    put:
      tags:
        - EDS Sites
      summary: Update Site
      description: ""
      operationId: updateSite
      parameters:
        - name: programId
          in: path
          required: true
          type: string
        - name: siteId
          in: path
          required: true
          type: integer
          format: int64
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: Site updated
          schema:
            $ref: "#/definitions/Site"
        "404":
          description: Site could not be found
    delete:
      tags:
        - EDS Sites
      summary: Delete Site
      description: ""
      operationId: deleteSite
      parameters:
        - name: programId
          in: path
          required: true
          type: string
        - name: siteId
          in: path
          required: true
          type: integer
          format: int64
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: Site deleted
          schema:
            $ref: "#/definitions/Site"
        "404":
          description: Site could not be found
  "/api/program/{programId}/site/{siteId}/validate":
    put:
      tags:
        - EDS Sites
      summary: Validate Site
      description: ""
      operationId: validateSite
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: siteId
          in: path
          description: Identifier of the site
          required: true
          type: integer
          format: int64
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: Site validated
          schema:
            $ref: "#/definitions/Site"
        "400":
          description: Site could not be validated. CloudManager challenge does not match
        "500":
          description: Internal Server Error
        "504":
          description: Site could not be validated in time
  "/api/program/{programId}/sites":
    get:
      tags:
        - EDS Sites
      summary: Get All Sites by programId
      description: ""
      operationId: getProgramSites
      parameters:
        - name: programId
          in: path
          required: true
          type: string
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: Sites retrieved
          schema:
            $ref: "#/definitions/SiteList"
    post:
      tags:
        - EDS Sites
      summary: Create Site
      description: ""
      operationId: createSite
      parameters:
        - name: programId
          in: path
          required: true
          type: string
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/Site"
        "201":
          description: Site created
          schema:
            $ref: "#/definitions/Site"
  "/api/program/{programId}/feedbacks":
    post:
      tags:
        - Programs
      summary: Post feedback
      description: Add new feedback
      operationId: postFeedback
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - in: body
          name: body
          description: Feedback
          required: true
          schema:
            $ref: "#/definitions/NewFeedback"
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
        - name: Content-Type
          in: header
          description: Must always be application/json
          required: true
          type: string
      responses:
        "400":
          description: Invalid request
        "404":
          description: Application not found
  "/api/program/{programId}/newRelicUsers":
    get:
      tags:
        - Programs
      summary: Get New Relic Sub Account users list
      description: Get New Relic Sub Account users list for this program
      operationId: getNewRelicSubAccountUserList
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: Successful retrieval of the list of New Relic Sub Account users
          schema:
            $ref: "#/definitions/NewRelicSubAccountUserlist"
        "400":
          description: The request is malformed.
        "401":
          description: The request has not been applied because it lacks valid authentication credentials for the target resource.
        "403":
          description: The requester is not authorized to access the resource.
        "405":
          description: Client sent a request using a HTTP method that the server doesn"t support.
        "406":
          description: Unacceptable content type. Client sent an Accept header for a content type which does not exist on the server.
        "422":
          description: Unprocessable Entity
        "500":
          description: This is an indicator of a server-side error.
        "502":
          description: This is an indicator that the back-end service did not send a valid response.
        "503":
          description: This is an indicator of a potential server overload.
        "504":
          description: This is an indicator that the back-end service did not complete a response within an allowed time period.
    patch:
      tags:
        - Programs
      summary: Create and Delete New Relic Sub Account users
      description: Create and Delete New Relic Sub Account users for this program
      operationId: createDeleteNewRelicSubAccountUsers
      parameters:
        - in: body
          name: body
          description: New Relic Sub-Account Users
          required: true
          schema:
            $ref: "#/definitions/NewRelicSubAccountUser"
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
        - name: Content-Type
          in: header
          description: Must always be application/json
          required: true
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/NewRelicSubAccountUserlist"
        "204":
          description: Successful New Relic Sub Account user flow initiation
        "400":
          description: The request is malformed.
        "401":
          description: The request has not been applied because it lacks valid authentication credentials for the target resource.
        "403":
          description: The requester is not authorized to access the resource.
        "404":
          description: Program not found
        "406":
          description: Unacceptable content type. Client sent an Accept header for a content type which does not exist on the server.
        "500":
          description: This is an indicator of a server-side error.
        "502":
          description: This is an indicator that the back-end service did not send a valid response.
        "503":
          description: This is an indicator of a potential server overload.
        "504":
          description: This is an indicator that the back-end service did not complete a response within an allowed time period.
  /api/tenants:
    get:
      tags:
        - Tenants
      summary: List Tenants
      description: Lists all tenants
      operationId: getTenants
      parameters:
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: Successful retrieval of tenant list
          schema:
            $ref: "#/definitions/TenantList"
  "/api/tenant/{tenantId}":
    get:
      tags:
        - Tenants
      summary: Get Tenant
      description: Returns a tenant by its id
      operationId: getTenant
      parameters:
        - name: tenantId
          in: path
          description: Identifier of the tenant
          required: true
          type: string
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: Successful retrieval of tenant
          schema:
            $ref: "#/definitions/Tenant"
        "404":
          description: Tenant not found
  "/api/tenant/{tenantId}/programs":
    get:
      tags:
        - Programs
      summary: Lists Programs for Tenant
      description: Returns all programs defined for tenant.
      operationId: getProgramsForTenant
      parameters:
        - name: tenantId
          in: path
          description: Identifier of the tenant
          required: true
          type: string
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/ProgramList"
        "404":
          description: Tenant not found.
    post:
      tags:
        - Programs
      summary: Create Program
      description: Creates a program
      operationId: addProgram
      parameters:
        - name: tenantId
          in: path
          description: Identifier of the tenant
          required: true
          type: string
        - in: body
          name: body
          description: Program
          required: true
          schema:
            $ref: "#/definitions/NewProgram"
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
        - name: Content-Type
          in: header
          description: Must always be application/json
          required: true
          type: string
      responses:
        "201":
          description: Creation was successful.
          schema:
            $ref: "#/definitions/Program"
        "409":
          description: Program already exists.
  "/api/program/{programId}/regions":
    get:
      tags:
        - Regions
      summary: Lists Regions
      description: Returns all Regions that can be used to create environments for this program.
      operationId: getProgramRegions
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/RegionsList"
  "/api/program/{programId}/networkInfrastructures":
    get:
      tags:
        - Network infrastructure
      summary: List Network Infrastructures
      description: Lists all network infrastructures in an program
      operationId: getNetworkInfrastructures
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: Successful retrieval of network infrastructure list
          schema:
            $ref: "#/definitions/NetworkInfrastructuresList"
        "404":
          description: Program not found
    post:
      tags:
        - Network infrastructure
      summary: Create network configuration
      description: Create a new network configuration
      operationId: createNetworkInfrastructure
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - in: body
          name: body
          description: Configuration
          required: true
          schema:
            $ref: "#/definitions/NetworkInfrastructure"
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
        - name: Content-Type
          in: header
          description: Must always be application/json
          required: true
          type: string
      responses:
        "201":
          description: Network infrastructure created
          schema:
            $ref: "#/definitions/NetworkInfrastructure"
        "404":
          description: Resource not found
  "/api/program/{programId}/networkInfrastructure/{networkInfrastructureId}":
    get:
      tags:
        - Network infrastructure
      summary: Get network infrastructure
      description: Gets an existing network infrastructure
      operationId: getNetworkInfrastructure
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: networkInfrastructureId
          in: path
          description: Identifier of the network infrastructure
          required: true
          type: string
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: Got network Infrastructure details
          schema:
            $ref: "#/definitions/NetworkInfrastructure"
        "404":
          description: Network Infrastructure not found
    put:
      tags:
        - Network infrastructure
      summary: Update network infrastructure
      description: Updates an existing network infrastructure
      operationId: updateNetworkInfrastructure
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: networkInfrastructureId
          in: path
          description: Identifier of the network infrastructure
          required: true
          type: string
        - in: body
          name: body
          description: Configuration
          required: true
          schema:
            $ref: "#/definitions/NetworkInfrastructure"
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
        - name: Content-Type
          in: header
          description: Must always be application/json
          required: true
          type: string
      responses:
        "200":
          description: Network infrastructure updated
          schema:
            $ref: "#/definitions/NetworkInfrastructure"
        "404":
          description: Network Infrastructure not found
    delete:
      tags:
        - Network infrastructure
      summary: Delete network infrastructure
      description: Deletes an existing network infrastructure
      operationId: deleteNetworkInfrastructure
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: networkInfrastructureId
          in: path
          description: Identifier of the network infrastructure
          required: true
          type: string
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/NetworkInfrastructure"
        "204":
          description: Network infrastructure deleted
          schema:
            $ref: "#/definitions/NetworkInfrastructure"
        "400":
          description: Network Infrastructure cannot be deleted
        "404":
          description: Network Infrastructure not found
  "/api/program/{programId}/environment/{environmentId}/advancedNetworking":
    get:
      tags:
        - Environment Advanced Networking Configuration
      summary: Get Environment Advanced Networking Configurations
      description: Returns environment advanced networking configurations by its id
      operationId: getEnvironmentAdvancedNetworkingConfigurationList
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: environmentId
          in: path
          description: Identifier of the environment
          required: true
          type: string
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: Environment Advanced Networking Configurations
          schema:
            $ref: "#/definitions/AdvancedNetworkingConfigurationList"
        "404":
          description: Resource not found
    put:
      tags:
        - Environment Advanced Networking Configuration
      summary: Enable Environment Advanced Networking Configuration
      description: Enable an environment advanced networking configuration by its id
      operationId: enableEnvironmentAdvancedNetworkingConfiguration
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: environmentId
          in: path
          description: Identifier of the environment
          required: true
          type: string
        - in: body
          name: body
          description: " Environment Advanced Networking Configuration"
          required: true
          schema:
            $ref: "#/definitions/EnableAdvancedNetworkingConfiguration"
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
        - name: Content-Type
          in: header
          description: Must always be application/json
          required: true
          type: string
      responses:
        "200":
          description: Environment Advanced Networking Configuration started
          schema:
            $ref: "#/definitions/Environment"
        "400":
          description: Validation exception
        "404":
          description: Resource not found
    delete:
      tags:
        - Environment Advanced Networking Configuration
      summary: Disable Environment Advanced Networking Configuration
      description: Disable an environment advanced networking configuration by its id
      operationId: disableEnvironmentAdvancedNetworkingConfiguration
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: environmentId
          in: path
          description: Identifier of the environment
          required: true
          type: string
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: Environment Advanced Networking Configuration disabled
          schema:
            $ref: "#/definitions/Environment"
        "400":
          description: Validation exception
        "404":
          description: Resource not found
  "/api/program/{programId}/contentSets":
    get:
      tags:
        - ContentSets
      summary: Lists Content Sets for program
      description: Returns all content sets defined for the program.
      operationId: getContentSets
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: List content sets
          schema:
            $ref: "#/definitions/ContentSetList"
        "400":
          description: Bad request
    post:
      tags:
        - ContentSets
      summary: Create content set
      description: create a content set
      operationId: createContentSet
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - in: body
          name: body
          description: Content set
          required: true
          schema:
            $ref: "#/definitions/NewContentSet"
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
        - name: Content-Type
          in: header
          description: Must always be application/json
          required: true
          type: string
      responses:
        "201":
          description: Content Set created
          schema:
            $ref: "#/definitions/ContentSet"
        "400":
          description: Bad request
        "404":
          description: Program not found
  "/api/program/{programId}/contentSet/{contentSetId}":
    get:
      tags:
        - ContentSets
      summary: Get content set
      description: Gets a content set by Id
      operationId: getContentSet
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: contentSetId
          in: path
          description: Identifier of the content set
          required: true
          type: string
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: Found content set
          schema:
            $ref: "#/definitions/ContentSet"
        "400":
          description: Bad request
        "404":
          description: Content set not found
    put:
      tags:
        - ContentSets
      summary: Update content set
      description: Updates the content set
      operationId: updateContentSet
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: contentSetId
          in: path
          description: Identifier of the content set
          required: true
          type: string
        - in: body
          name: body
          description: Content set
          required: true
          schema:
            $ref: "#/definitions/ContentSet"
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
        - name: Content-Type
          in: header
          description: Must always be application/json
          required: true
          type: string
      responses:
        "201":
          description: Content set updated
          schema:
            $ref: "#/definitions/ContentSet"
        "400":
          description: Bad request
        "404":
          description: Content set not found
    delete:
      tags:
        - ContentSets
      summary: Delete content set
      description: Deletes the content set by Id
      operationId: deleteContentSet
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: contentSetId
          in: path
          description: Identifier of the content set
          required: true
          type: string
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: Content set deleted
          schema:
            $ref: "#/definitions/ContentSet"
        "400":
          description: Bad request
        "404":
          description: Content set not found
  "/api/program/{programId}/contentFlows":
    get:
      tags:
        - ContentSets
      summary: List content flows for the program
      description: List all content flows for a program
      operationId: listContentFlows
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: start
          in: query
          description: Pagination start parameter
          required: false
          type: string
          default: "0"
        - name: limit
          in: query
          description: Pagination limit parameter
          required: false
          type: integer
          default: 20
          format: int32
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: List content flows
          schema:
            $ref: "#/definitions/ContentFlowList"
        "400":
          description: Bad request
  "/api/program/{programId}/environment/{environmentId}/contentFlow":
    post:
      tags:
        - ContentSets
      summary: Execute content flow using content set
      description: Executes a content flow
      operationId: createContentFlow
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: environmentId
          in: path
          description: Identifier of the source environment
          required: true
          type: string
        - in: body
          name: body
          description: Content Flow details
          required: true
          schema:
            $ref: "#/definitions/ContentFlowInput"
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
        - name: Content-Type
          in: header
          description: Must always be application/json
          required: true
          type: string
      responses:
        "201":
          description: Content Flow started
          schema:
            $ref: "#/definitions/ContentFlow"
        "400":
          description: Bad request
        "403":
          description: The requester is not authorized to access the resource.
        "404":
          description: Program not found
  "/api/program/{programId}/contentFlow/{contentFlowId}":
    get:
      tags:
        - ContentSets
      summary: Get content flow
      description: Gets content flow for a program
      operationId: getContentFlow
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: contentFlowId
          in: path
          description: Identifier of the contentFlow
          required: true
          type: string
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: Successful retrieval of the content flow
          schema:
            $ref: "#/definitions/ContentFlow"
        "400":
          description: Bad request
    delete:
      tags:
        - ContentSets
      summary: Cancel content flow (Cloud Service only).
      description: Cancel content flow
      operationId: cancelContentFlow
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: contentFlowId
          in: path
          description: Identifier of the content flow
          required: true
          type: string
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: Content flow canceled
          schema:
            $ref: "#/definitions/ContentFlow"
        "400":
          description: Bad request
  "/api/program/{programId}/contentFlow/{contentFlowId}/logs":
    get:
      tags:
        - ContentSets
      summary: Get Content Flow Logs
      description: Get Content Flow Logs
      operationId: getContentFlowLogs
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: contentFlowId
          in: path
          description: Identifier of the content flow
          required: true
          type: string
        - name: jobType
          in: query
          description: "Job type (import, export)"
          required: true
          type: string
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: Successful retrieval of logs
          schema:
            $ref: "#/definitions/ContentFlowLogs"
        "400":
          description: Missing JobType
          schema:
            $ref: "#/definitions/BadRequestError"
        "404":
          description: Program not found.
  "/api/program/{programId}/contentFlow/{contentFlowId}/logs/download":
    get:
      tags:
        - ContentSets
      summary: Download content flow logs
      description: Download content flow logs
      operationId: downloadLogs
      parameters:
        - name: programId
          in: path
          description: Identifier of the program
          required: true
          type: string
        - name: contentFlowId
          in: path
          description: Identifier of the content flow
          required: true
          type: string
        - name: jobType
          in: query
          description: "Job type (import, export)"
          required: true
          type: string
        - name: Accept
          in: header
          required: false
          type: string
        - name: x-gw-ims-org-id
          in: header
          description: IMS organization ID that the request is being made under.
          required: true
          type: string
        - name: Authorization
          in: header
          description: "Bearer [token] - An access token for the technical account created through integration with Adobe IO"
          required: true
          type: string
        - name: x-api-key
          in: header
          description: IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
          required: true
          type: string
      responses:
        "200":
          description: Successful retrieval of logs
          excludeSchema: true
          schema:
            $ref: "#/definitions/Redirect"
        "400":
          description: Missing JobType
          schema:
            $ref: "#/definitions/BadRequestError"
        "404":
          description: Program not found.
definitions:
  ProgramList:
    type: object
    properties:
      _totalNumberOfItems:
        type: integer
        format: int32
        description: The total number of embedded items
      _page:
        $ref: "#/definitions/RequestedPageDetails"
        description: Details of the requested page of items
      _embedded:
        type: object
        readOnly: true
        properties:
          programs:
            type: array
            items:
              $ref: "#/definitions/EmbeddedProgram"
      _links:
        type: object
        readOnly: true
        properties:
          next:
            $ref: "#/definitions/HalLink"
            description: The next page of results.
          page:
            $ref: "#/definitions/HalLink"
            description: An arbitrary page of results.
          prev:
            $ref: "#/definitions/HalLink"
            description: The previous page of results.
          self:
            $ref: "#/definitions/HalLink"
            description: This object's representation
  EmbeddedProgram:
    type: object
    properties:
      id:
        type: string
        example: "14"
        description: Identifier of the program. Unique within the space.
        readOnly: true
      name:
        type: string
        example: AcmeCorp Main Site
        description: Name of the program
        readOnly: true
      enabled:
        type: boolean
        description: Whether this Program has been enabled for Cloud Manager usage
        default: false
        readOnly: true
      tenantId:
        type: string
        example: acmeCorp
        description: Tenant Id
        readOnly: true
      status:
        type: string
        description: Status of the program
        enum:
          - creating
          - ready
          - deleting
          - deleted
          - deleted_failed
          - failed
      createdAt:
        type: string
        format: date-time
        description: Created time
      updatedAt:
        type: string
        format: date-time
        description: Date of last change
      _links:
        type: object
        readOnly: true
        properties:
          "http://ns.adobe.com/adobecloud/rel/tenant":
            description: The tenant this program belongs to
            $ref: "#/definitions/HalLink"
          self:
            $ref: "#/definitions/HalLink"
            description: This object's representation
    description: A lightweight representation of a Program
  Program:
    type: object
    required:
      - name
      - type
    properties:
      id:
        type: string
        example: "14"
        description: Identifier of the program. Unique within the space.
      name:
        type: string
        example: AcmeCorp Main Site
        description: Name of the program
        minLength: 0
        maxLength: 64
        pattern: '(?=.*[a-zA-Z])[-+!"\""/#$%&*.,;:()’@-}À-ÿ– 0-9]*'
      enabled:
        type: boolean
        description: Whether this Program has been enabled for Cloud Manager usage
        default: false
      tenantId:
        type: string
        example: acmeCorp
        description: Tenant Id
      imsOrgId:
        type: string
        example: 6522A55453334E247F120101@AdobeOrg
        description: Organisation Id
      status:
        type: string
        description: Status of the program
        enum:
          - creating
          - ready
          - deleting
          - deleted
          - deleted_failed
          - failed
      type:
        type: string
        example: aem_cloud_service
        description: The type of program
        enum:
          - aem_managed_services
          - aem_cloud_service
          - media_library
      capabilities:
        example: "{ ""capability1"":""value1"", ""capability1"": {""param3"":""value3""}}"
        description: Program capabilities
        $ref: "#/definitions/ProgramCapabilities"
      createdAt:
        type: string
        format: date-time
        description: Created time
      updatedAt:
        type: string
        format: date-time
        description: Date of last change
      _links:
        type: object
        readOnly: true
        properties:
          "http://ns.adobe.com/adobecloud/rel/pipelines":
            description: Pipelines defined in the program
            $ref: "#/definitions/HalLink"
          "http://ns.adobe.com/adobecloud/rel/environments":
            description: The environments linked to this program.
            $ref: "#/definitions/HalLink"
          "http://ns.adobe.com/adobecloud/rel/repositories":
            description: The repositories linked to this program.
            $ref: "#/definitions/HalLink"
          "http://ns.adobe.com/adobecloud/rel/ipAllowlists":
            description: The IP allowlists linked to this program.
            $ref: "#/definitions/HalLink"
          "http://ns.adobe.com/adobecloud/rel/certificates":
            description: The SSL certificates linked to this program.
            $ref: "#/definitions/HalLink"
          "http://ns.adobe.com/adobecloud/rel/tenant":
            description: The tenant this program belongs to
            $ref: "#/definitions/HalLink"
          "http://ns.adobe.com/adobecloud/rel/networkInfrastructures":
            $ref: "#/definitions/HalLink"
          "http://ns.adobe.com/adobecloud/rel/regions":
            description: The regions available for this program.
            $ref: "#/definitions/HalLink"
          self:
            $ref: "#/definitions/HalLink"
            description: This object's representation
    description: A representation of a Program
  ProgramCapabilities:
    type: object
    properties:
      sandbox:
        type: boolean
        example: true
        description: Indicator of a sandbox program.
        readOnly: true
        default: false
    description: Contains the program capabilities
  HalLink:
    type: object
    properties:
      href:
        type: string
      templated:
        type: boolean
        default: false
      type:
        type: string
      deprecation:
        type: string
      profile:
        type: string
      title:
        type: string
      hreflang:
        type: string
      name:
        type: string
  Pipeline:
    type: object
    required:
      - name
      - phases
    properties:
      id:
        type: string
        example: "29"
        description: Identifier of the pipeline. Unique within the program.
      programId:
        type: string
        example: "14"
        description: Identifier of the program. Unique within the space.
      name:
        type: string
        example: AcmeCorp Main Pipeline
        description: Name of the pipeline
        minLength: 1
        maxLength: 64
      trigger:
        type: string
        example: MANUAL
        description: "How should the execution be triggered. ON_COMMIT: each time one or more commits are pushed and the Pipeline is idle then a execution is triggered. MANUAL: triggerd through UI or API."
        enum:
          - ON_COMMIT
          - MANUAL
      status:
        type: string
        example: IDLE
        description: Pipeline status
        enum:
          - IDLE
          - BUSY
          - WAITING
      createdAt:
        type: string
        format: date-time
        description: Create date
        readOnly: true
      updatedAt:
        type: string
        format: date-time
        description: Update date
        readOnly: true
      lastStartedAt:
        type: string
        format: date-time
        description: Last pipeline execution start
        readOnly: true
      lastFinishedAt:
        type: string
        format: date-time
        description: Last pipeline execution end
        readOnly: true
      phases:
        type: array
        description: Pipeline phases in execution order
        items:
          $ref: "#/definitions/PipelinePhase"
        maxItems: 100
        minItems: 1
      type:
        type: string
        example: CI_CD
        description: Pipeline type
        enum:
          - CI_CD
          - CODE_GENERATOR
      _links:
        type: object
        readOnly: true
        properties:
          "http://ns.adobe.com/adobecloud/rel/program":
            description: The Program this pipeline belongs to.
            $ref: "#/definitions/HalLink"
          "http://ns.adobe.com/adobecloud/rel/execution":
            description: Current pipeline execution if any
            $ref: "#/definitions/HalLink"
          "http://ns.adobe.com/adobecloud/rel/execution/id":
            description: Get pipeline execution by id
            $ref: "#/definitions/HalLink"
          "http://ns.adobe.com/adobecloud/rel/executions":
            description: Get all historic executions for this pipeline.
            $ref: "#/definitions/HalLink"
          "http://ns.adobe.com/adobecloud/rel/variables":
            description: Custom pipeline variables
            $ref: "#/definitions/HalLink"
          "http://ns.adobe.com/adobecloud/rel/rollbackLastSuccessfulExecution":
            description: Start a CI/CD rollback execution
            $ref: "#/definitions/HalLink"
          "http://ns.adobe.com/adobecloud/rel/cache":
            description: Pipeline cache
            $ref: "#/definitions/HalLink"
          self:
            $ref: "#/definitions/HalLink"
            description: This object's representation
    description: A representation of a CI/CD Pipeline
  PipelinePhase:
    type: object
    required:
      - type
    properties:
      name:
        type: string
        example: DEV Build
        description: Name of the phase
      type:
        type: string
        example: DEPLOY
        description: Type of the phase
        enum:
          - VALIDATE
          - BUILD
          - DEPLOY
      repositoryId:
        type: string
        description: |-
          Identifier of the source repository. The code from this repository will be build at the start of this phase. 
          Mandatory if type=BUILD
      branch:
        type: string
        description: |-
          Name of the tracked branch or a fully qualified git tag (e.g. refs/tags/v1). 
           Assumed to be `master` if missing.
      environmentId:
        type: string
        description: Identifier of the target environment. Mandatory if type=DEPLOY
      environmentType:
        type: string
        description: "Type of environment (for example stage or prod, readOnly = true)"
        enum:
          - dev
          - stage
          - prod
          - rde
          - preprod
      steps:
        type: array
        description: "Steps to be included in the phase in execution order. Might be added or not, depending on permissions or configuration"
        items:
          $ref: "#/definitions/PipelineStep"
    description: Describes a phase of a pipeline
  PipelineList:
    type: object
    properties:
      _totalNumberOfItems:
        type: integer
        format: int32
        description: The total number of embedded items
      _page:
        $ref: "#/definitions/RequestedPageDetails"
        description: Details of the requested page of items
      _embedded:
        type: object
        readOnly: true
        properties:
          pipelines:
            type: array
            items:
              $ref: "#/definitions/Pipeline"
      _links:
        type: object
        readOnly: true
        properties:
          next:
            $ref: "#/definitions/HalLink"
            description: The next page of results.
          page:
            $ref: "#/definitions/HalLink"
            description: An arbitrary page of results.
          prev:
            $ref: "#/definitions/HalLink"
            description: The previous page of results.
          self:
            $ref: "#/definitions/HalLink"
            description: This object's representation
  PipelineExecution:
    type: object
    properties:
      id:
        type: string
        description: Pipeline execution identifier
      programId:
        type: string
        example: "14"
        description: Identifier of the program. Unique within the space.
        readOnly: true
      pipelineId:
        type: string
        example: "10"
        description: Identifier of the pipeline. Unique within the space.
        readOnly: true
      artifactsVersion:
        type: string
        description: Version of the artifacts generated during this execution
      user:
        type: string
        example: 0123456789ABCDE@AdobeID
        description: AdobeID who started the pipeline. Empty for auto triggered builds
      status:
        type: string
        description: Status of the execution
        enum:
          - NOT_STARTED
          - RUNNING
          - CANCELLING
          - CANCELLED
          - FINISHED
          - ERROR
          - FAILED
      trigger:
        type: string
        description: How the execution was triggered.
        enum:
          - ON_COMMIT
          - MANUAL
          - PUSH_UPGRADES
      pipelineExecutionMode:
        type: string
        description: The mode in which the execution occurred. EMERGENCY mode will skip certain steps and is only available to select AMS customers
        enum:
          - NORMAL
          - EMERGENCY
      createdAt:
        type: string
        format: date-time
        description: Timestamp at which the execution was created
      updatedAt:
        type: string
        format: date-time
        description: Timestamp at which the status of the execution last changed
      finishedAt:
        type: string
        format: date-time
        description: Timestamp at which the execution completed
      pipelineType:
        type: string
        example: CI_CD
        description: Pipeline type
        enum:
          - CI_CD
          - CODE_GENERATOR
      _embedded:
        type: object
        readOnly: true
        properties:
          stepStates:
            type: array
            items:
              $ref: "#/definitions/PipelineExecutionStepState"
      _links:
        type: object
        readOnly: true
        properties:
          "http://ns.adobe.com/adobecloud/rel/program":
            description: Get the program of the execution
            $ref: "#/definitions/HalLink"
          "http://ns.adobe.com/adobecloud/rel/pipeline":
            description: Get the pipeline of the execution
            $ref: "#/definitions/HalLink"
          self:
            $ref: "#/definitions/HalLink"
            description: This object's representation
    description: A representation of an execution of a CI/CD Pipeline.
  PipelineExecutionStepState:
    type: object
    properties:
      id:
        type: string
      stepId:
        type: string
      phaseId:
        type: string
      action:
        type: string
        example: build
        description: Name of the action
      repository:
        type: string
        description: Target repository
      branch:
        type: string
        description: Target branch
      environment:
        type: string
        description: Target environment
      environmentId:
        type: string
        description: Target environment id
      environmentType:
        type: string
        description: Target environment type
      startedAt:
        type: string
        format: date-time
        description: Timestamp at which the step state started running
      finishedAt:
        type: string
        format: date-time
        description: Timestamp at which the step completed
      commitId:
        type: string
        description: Target commit id
      details:
        type: object
        description: Additional details of the step
        $ref: "#/definitions/PipelineExecutionStepStateDetails"
      status:
        type: string
        example: NOT_STARTED
        description: Action status
        enum:
          - NOT_STARTED
          - RUNNING
          - FINISHED
          - ERROR
          - ROLLING_BACK
          - ROLLED_BACK
          - WAITING
          - CANCELLED
          - FAILED
          - INCOMPLETE
      _links:
        type: object
        readOnly: true
        properties:
          "http://ns.adobe.com/adobecloud/rel/execution":
            $ref: "#/definitions/HalLink"
          "http://ns.adobe.com/adobecloud/rel/pipeline":
            description: Get the pipeline of the execution
            $ref: "#/definitions/HalLink"
          "http://ns.adobe.com/adobecloud/rel/pipeline/logs":
            $ref: "#/definitions/HalLink"
          "http://ns.adobe.com/adobecloud/rel/pipeline/metrics":
            $ref: "#/definitions/HalLink"
          "http://ns.adobe.com/adobecloud/rel/pipeline/reExecute":
            $ref: "#/definitions/HalLink"
          "http://ns.adobe.com/adobecloud/rel/pipeline/advance":
            description: "Post to this link in order to advance the pipeline, if paused and waiting for user interaction. Link is present in output only in that case."
            $ref: "#/definitions/HalLink"
          "http://ns.adobe.com/adobecloud/rel/pipeline/cancel":
            description: Post to this link in order to cancel the pipeline. Link is present in output only in that case.
            $ref: "#/definitions/HalLink"
          "http://ns.adobe.com/adobecloud/rel/program":
            description: Get the program of the execution
            $ref: "#/definitions/HalLink"
          self:
            $ref: "#/definitions/HalLink"
            description: This object's representation
    description: Describes the status of a particular pipeline execution step for display purposes
  PipelineExecutionListRepresentation:
    type: object
    properties:
      _totalNumberOfItems:
        type: integer
        format: int32
        description: The total number of embedded items
      _page:
        $ref: "#/definitions/RequestedPageDetails"
        description: Details of the requested page of items
      _embedded:
        type: object
        readOnly: true
        properties:
          executions:
            type: array
            items:
              $ref: "#/definitions/PipelineExecution"
      _links:
        type: object
        readOnly: true
        properties:
          next:
            $ref: "#/definitions/HalLink"
            description: The next page of results.
          page:
            $ref: "#/definitions/HalLink"
            description: An arbitrary page of results.
          prev:
            $ref: "#/definitions/HalLink"
            description: The previous page of results.
          self:
            $ref: "#/definitions/HalLink"
            description: This object's representation
    description: List of pipeline executions
  PipelineStepMetrics:
    type: object
    properties:
      metrics:
        type: array
        description: metrics
        readOnly: true
        items:
          $ref: "#/definitions/Metric"
  Metric:
    type: object
    properties:
      id:
        type: string
        description: KPI result identifier
      severity:
        type: string
        description: Severity of the metric
        enum:
          - critical
          - important
          - informational
      passed:
        type: boolean
        description: Whether metric is considered passed
        default: false
      override:
        type: boolean
        description: Whether user override the failed metric
        default: false
      actualValue:
        type: string
        description: Expected value for the metric
      expectedValue:
        type: string
        description: Expected value for the metric
      comparator:
        type: string
        description: Comparator used for the metric
        enum:
          - GT
          - GTE
          - LT
          - LTE
          - EQ
          - NEQ
      kpi:
        type: string
        description: KPI identifier
    description: A representation of a specific metric generated by a CI/CD Pipeline step.
  EnvironmentList:
    type: object
    properties:
      _totalNumberOfItems:
        type: integer
        format: int32
        description: The total number of embedded items
      _embedded:
        type: object
        readOnly: true
        properties:
          environments:
            type: array
            items:
              $ref: "#/definitions/Environment"
      _links:
        type: object
        readOnly: true
        properties:
          next:
            $ref: "#/definitions/HalLink"
            description: The next page of results.
          prev:
            $ref: "#/definitions/HalLink"
            description: The previous page of results.
          self:
            $ref: "#/definitions/HalLink"
            description: This object's representation
  Environment:
    type: object
    properties:
      id:
        type: string
        description: id
      programId:
        type: string
        example: "14"
        description: Identifier of the program. Unique within the space.
      name:
        type: string
        example: AcmeCorp Dev1 Environment
        description: Name of the environment
        pattern: "(?=.*[a-zA-Z])[-+!"""/#$%&*.,;()@-} 0-9]*"
      description:
        type: string
        example: This is our primary development environment
        description: Description of the environment
      type:
        type: string
        example: dev
        description: Type of the environment
        enum:
          - dev
          - stage
          - prod
          - rde
          - preprod
      status:
        type: string
        example: creating
        description: Status of the environment
        enum:
          - creating
          - ready
          - deleting
          - deleted
          - updating
          - failed
          - deploy_failed
          - created
          - restoring
          - restore_failed
          - resetting
          - reset_failed
          - degraded
      region:
        type: string
        example: va7
        description: Region of the environment
      availableLogOptions:
        type: array
        description: List of logs available in the environment
        items:
          $ref: "#/definitions/LogOptionRepresentation"
      _links:
        type: object
        readOnly: true
        properties:
          "http://ns.adobe.com/adobecloud/rel/program":
            description: The Program this environment belongs to.
            $ref: "#/definitions/HalLink"
          "http://ns.adobe.com/adobecloud/rel/pipeline":
            description: "The Pipeline this environment is assigned to, if any"
            $ref: "#/definitions/HalLink"
          "http://ns.adobe.com/adobecloud/rel/author":
            description: Author URL
            $ref: "#/definitions/HalLink"
          "http://ns.adobe.com/adobecloud/rel/publish":
            description: Publish URL
            $ref: "#/definitions/HalLink"
          "http://ns.adobe.com/adobecloud/rel/preview":
            description: Publish URL
            $ref: "#/definitions/HalLink"
          "http://ns.adobe.com/adobecloud/rel/developerConsole":
            description: Developer Console URL
            $ref: "#/definitions/HalLink"
          "http://ns.adobe.com/adobecloud/rel/logs":
            $ref: "#/definitions/HalLink"
          "http://ns.adobe.com/adobecloud/rel/variables":
            description: Custom environment variables
            $ref: "#/definitions/HalLink"
          "http://ns.adobe.com/adobecloud/rel/advancedNetworking":
            $ref: "#/definitions/HalLink"
          self:
            $ref: "#/definitions/HalLink"
            description: This object's representation
    description: A representation of an Environment known to Cloud Manager.
  Repository:
    type: object
    properties:
      repo:
        type: string
        example: Adobe-Marketing-Cloud
        description: Repository name. Once set it cannot be updated
      description:
        type: string
        example: Description
        description: description
      repositoryUrl:
        type: string
        example: "https://git.cloudmanager.adobe.com/weretailprod/we-retail-global"
        description: Repository Url.
      _links:
        type: object
        readOnly: true
        properties:
          "http://ns.adobe.com/adobecloud/rel/program":
            description: The Program the repository belongs to
            $ref: "#/definitions/HalLink"
          "http://ns.adobe.com/adobecloud/rel/branches":
            description: List of branches in this repository
            $ref: "#/definitions/HalLink"
          self:
            $ref: "#/definitions/HalLink"
            description: This object's representation
    description: A sourcecode repository
  RepositoryList:
    type: object
    properties:
      _totalNumberOfItems:
        type: integer
        format: int32
        description: The total number of embedded items
      _page:
        $ref: "#/definitions/RequestedPageDetails"
        description: Details of the requested page of items
      _embedded:
        type: object
        readOnly: true
        properties:
          repositories:
            type: array
            items:
              $ref: "#/definitions/Repository"
      _links:
        type: object
        readOnly: true
        properties:
          next:
            $ref: "#/definitions/HalLink"
            description: The next page of results.
          page:
            $ref: "#/definitions/HalLink"
            description: An arbitrary page of results.
          prev:
            $ref: "#/definitions/HalLink"
            description: The previous page of results.
          self:
            $ref: "#/definitions/HalLink"
            description: This object's representation
  RepositoryBranch:
    type: object
    properties:
      programId:
        type: string
        example: "14"
        description: Identifier of the program. Unique within the space
      repositoryId:
        type: integer
        format: int64
        example: 2
        description: Identifier of the repository
      name:
        type: string
        example: master
        description: Name of the branch
      _links:
        type: object
        readOnly: true
        properties:
          "http://ns.adobe.com/adobecloud/rel/program":
            description: Program
            $ref: "#/definitions/HalLink"
          "http://ns.adobe.com/adobecloud/rel/repository":
            description: Repository
            $ref: "#/definitions/HalLink"
    description: Represents a Git Branch
  BranchList:
    type: object
    properties:
      _totalNumberOfItems:
        type: integer
        format: int32
        description: The total number of embedded items
      _embedded:
        type: object
        readOnly: true
        properties:
          branches:
            type: array
            items:
              $ref: "#/definitions/RepositoryBranch"
      _links:
        type: object
        readOnly: true
        properties:
          next:
            $ref: "#/definitions/HalLink"
            description: The next page of results.
          prev:
            $ref: "#/definitions/HalLink"
            description: The previous page of results.
          self:
            $ref: "#/definitions/HalLink"
            description: This object's representation
  RequestedPageDetails:
    type: object
    properties:
      start:
        type: integer
        format: int32
        description: The start index for the current page of results
      limit:
        type: integer
        format: int32
        description: The item limit for the current page of results
      next:
        type: integer
        format: int32
        description: The start index for the next page of results
      prev:
        type: integer
        format: int32
        description: The start index for the previous page of results
      orderBy:
        type: string
      property:
        type: array
        items:
          type: string
      type:
        type: string
    description: Filtering and sorting page details
  MissingParameter:
    type: object
    properties:
      name:
        type: string
        example: paramName
        description: Name of the missing parameter.
      type:
        type: string
        example: string
        description: Type of the missing parameter.
  InvalidParameter:
    type: object
    properties:
      name:
        type: string
        example: paramName
        description: Name of the invalid parameter.
      reason:
        type: string
        example: value must be a positive number
        description: Reason of why the parameter's value is not accepted.
  BadRequestError:
    type: object
    properties:
      status:
        type: integer
        format: int32
        example: 4xx
        description: HTTP status code of the response.
      type:
        type: string
        example: "http://ns.adobe.com/adobecloud/error"
        description: Error type identifier.
      title:
        type: string
        example: Validation failed
        description: A short summary of the error.
      missingParams:
        type: array
        description: Request's missing parameters.
        items:
          $ref: "#/definitions/MissingParameter"
      invalidParams:
        type: array
        description: Request's invalid parameters.
        items:
          $ref: "#/definitions/InvalidParameter"
    description: A Bad Request response error.
  EnvironmentLog:
    type: object
    properties:
      service:
        type: string
        example: author
        description: Name of the service
      name:
        type: string
        example: aemerror
        description: Name of the Log
      date:
        type: string
        example: "2019-04-05"
        description: date of the Log
        format: date
      programId:
        type: integer
        format: int64
      environmentId:
        type: integer
        format: int64
      _links:
        type: object
        readOnly: true
        properties:
          "http://ns.adobe.com/adobecloud/rel/logs/download":
            description: Download Logs link
            $ref: "#/definitions/HalLink"
          "http://ns.adobe.com/adobecloud/rel/logs/tail":
            description: Tail Log link
            $ref: "#/definitions/HalLink"
    description: Log from Environment
  EnvironmentLogs:
    type: object
    properties:
      service:
        type: array
        example: author
        description: Name of the service
        items:
          type: string
      name:
        type: array
        example: aemerror
        description: Name of the Log
        items:
          type: string
      days:
        type: integer
        format: int32
        example: 2
        description: Number of days
      _links:
        type: object
        readOnly: true
        properties:
          "http://ns.adobe.com/adobecloud/rel/program":
            description: The Application this environment belongs to.
            $ref: "#/definitions/HalLink"
          self:
            $ref: "#/definitions/HalLink"
            description: This object's representation
      _embedded:
        type: object
        readOnly: true
        properties:
          downloads:
            type: array
            description: Links to logs
            items:
              $ref: "#/definitions/EnvironmentLog"
    description: Logs of an Environment
  Variable:
    type: object
    properties:
      name:
        type: string
        example: MY_VAR1
        description: "Name of the variable. Can only consist of a-z, A-Z, _ and 0-9 and cannot begin with a number."
        pattern: "[a-zA-Z_][a-zA-Z_0-9]*"
      value:
        type: string
        example: myValue
        description: "Value of the variable. Read-Write for non-secrets, write-only for secrets. The length of `secretString` values must be less than 500 characters. An empty value causes a variable to be deleted."
      type:
        type: string
        example: string
        description: Type of the variable. Default `string` if missing. `secretString` variables are encrypted at rest. The type of a variable be changed after creation; the variable must be deleted and recreated.
        enum:
          - string
          - secretString
      service:
        description: "Service of the variable. When not provided, the variable applies to all services. Currently the values ""author"", ""publish"", and ""preview"" are supported. Note - this value is case-sensitive."
      status:
        type: string
        example: ready
        description: Status of the variable
    description: A named value than can be set on an Environment or Pipeline
  VariableList:
    type: object
    properties:
      _totalNumberOfItems:
        type: integer
        format: int32
        description: The total number of embedded items
      _embedded:
        type: object
        readOnly: true
        properties:
          variables:
            type: array
            example: "[{ ""name"":""variable1Name"", ""value"":""variable1Value""}, { ""name"":""variable1Name"", ""value"":""variable1Value"", ""service"":""author""}, { ""name"":""variable2Name"", ""type"":""secretString"", ""value"":""variable2SecretValue""}]"
            description: Variables set on environment
            items:
              $ref: "#/definitions/Variable"
      _links:
        type: object
        readOnly: true
        properties:
          "http://ns.adobe.com/adobecloud/rel/edgeEnvironment":
            description: The edge environment holding the variables
            $ref: "#/definitions/HalLink"
          "http://ns.adobe.com/adobecloud/rel/program":
            description: The Program
            $ref: "#/definitions/HalLink"
          self:
            $ref: "#/definitions/HalLink"
            description: This object's representation
  RegionDeployment:
    type: object
    properties:
      regionName:
        type: string
      clusterName:
        type: string
      namespaceName:
        type: string
      type:
        type: string
      dataStore:
        $ref: "#/definitions/DataStore"
  RegionDeploymentList:
    type: object
    properties:
      _totalNumberOfItems:
        type: integer
        format: int32
        description: The total number of embedded items
      _embedded:
        type: object
        readOnly: true
        properties:
          regionDeployments:
            type: array
            items:
              $ref: "#/definitions/RegionDeployment"
      _links:
        type: object
        readOnly: true
        properties:
          next:
            $ref: "#/definitions/HalLink"
            description: The next page of results.
          prev:
            $ref: "#/definitions/HalLink"
            description: The previous page of results.
          self:
            $ref: "#/definitions/HalLink"
            description: This object's representation
  ContentSet:
    type: object
    properties:
      id:
        type: string
        example: "123"
        description: Identifier of the Content Set
      name:
        type: string
        description: The name of the content set
      paths:
        type: array
        description: Included asset paths
        uniqueItems: true
        items:
          $ref: "#/definitions/ContentSetPath"
      programId:
        type: string
        example: "658"
        description: Identifier of the program. Unique within the space.
      createdAt:
        type: string
        format: date-time
        description: Create date
        readOnly: true
      updatedAt:
        type: string
        format: date-time
        description: Update date
        readOnly: true
      _links:
        type: object
        readOnly: true
        properties:
          "http://ns.adobe.com/adobecloud/rel/program":
            description: The Application this content set belongs to.
            $ref: "#/definitions/HalLink"
          self:
            $ref: "#/definitions/HalLink"
            description: This object's representation
    description: A representation of a ContentSet custom
  ContentSetPath:
    type: object
    properties:
      path:
        type: string
        description: path
      excluded:
        type: array
        description: excluded
        uniqueItems: true
        items:
          type: string
    description: Describes a __Content Set path__
  ContentSetList:
    type: object
    properties:
      _totalNumberOfItems:
        type: integer
        format: int32
        description: The total number of embedded items
      _page:
        $ref: "#/definitions/RequestedPageDetails"
        description: Details of the requested page of items
      _embedded:
        type: object
        readOnly: true
        properties:
          contentSets:
            type: array
            items:
              $ref: "#/definitions/ContentSet"
      _links:
        type: object
        readOnly: true
        properties:
          next:
            $ref: "#/definitions/HalLink"
            description: The next page of results.
          page:
            $ref: "#/definitions/HalLink"
            description: An arbitrary page of results.
          prev:
            $ref: "#/definitions/HalLink"
            description: The previous page of results.
          self:
            $ref: "#/definitions/HalLink"
            description: This object's representation
    description: Describes a Content Set List representation
  ContentFlow:
    type: object
    properties:
      contentSetId:
        type: string
        description: The content set id
      contentSetName:
        type: string
        description: The content set name
      srcEnvironmentId:
        type: string
        description: Source environment id
      srcEnvironmentName:
        type: string
        description: Source environment name
      destEnvironmentId:
        type: string
        description: Destination environment id
      destEnvironmentName:
        type: string
        description: Destination environment name
      tier:
        type: string
        description: "The tier, for example author"
      status:
        type: string
        description: Status of the flows
      destProgramId:
        type: string
        description: Destination program id
      resultDetails:
        description: Details of this content flow result
        $ref: "#/definitions/ContentFlowResults"
      _links:
        type: object
        readOnly: true
        properties:
          "http://ns.adobe.com/adobecloud/rel/contentSet":
            description: The Content set for this flow.
            $ref: "#/definitions/HalLink"
          "http://ns.adobe.com/adobecloud/rel/program":
            description: The Application this content set belongs to.
            $ref: "#/definitions/HalLink"
          "http://ns.adobe.com/adobecloud/rel/environment":
            description: The source Environment this content flow is copying from.
            $ref: "#/definitions/HalLink"
          "http://ns.adobe.com/adobecloud/rel/destEnvironment":
            description: The destination Environment this content flow is copying to.
            $ref: "#/definitions/HalLink"
          self:
            $ref: "#/definitions/HalLink"
            description: This object's representation
    description: The Content Flow Execution
  ContentFlowResults:
    type: object
    properties:
      exportResult:
        description: export results
        $ref: "#/definitions/ContentFlowResultDetails"
      importResult:
        description: import results
        $ref: "#/definitions/ContentFlowResultDetails"
      transferProgress:
        type: string
        description: Transfer progress percentage
    description: The Content Flow Results
  ContentFlowList:
    type: object
    properties:
      _totalNumberOfItems:
        type: integer
        format: int32
        description: The total number of embedded items
      _page:
        $ref: "#/definitions/RequestedPageDetails"
        description: Details of the requested page of items
      _embedded:
        type: object
        readOnly: true
        properties:
          contentFlows:
            type: array
            items:
              $ref: "#/definitions/ContentFlow"
      _links:
        type: object
        readOnly: true
        properties:
          next:
            $ref: "#/definitions/HalLink"
            description: The next page of results.
          prev:
            $ref: "#/definitions/HalLink"
            description: The previous page of results.
          self:
            $ref: "#/definitions/HalLink"
            description: This object's representation
  PipelineStep:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        example: deploy
        description: Name of the step
      options:
        type: object
        description: Map of option parameters for the step
        $ref: "#/definitions/PipelineStepOptions"
    description: Describes a step from a phase of a pipeline
  SystemUnderMaintenanceExceptionMapper:
    type: object
  Artifact:
    type: object
    required:
      - stepName
      - type
    properties:
      id:
        type: string
        example: "29"
        description: Identifier of the Artifact
      stepName:
        type: string
        example: loadTest
        description: Name of the step
      type:
        type: string
        example: LOAD_ERROR_PAGES
        description: Type of the artifact
        enum:
          - LOG_FILE
          - SCAN_ISSUES
          - LOAD_ERROR_PAGES
          - LOAD_SLOW_PAGES
          - LOAD_ERROR_GRAPH_CSV
          - LOAD_ERROR_GRAPH_JSON
          - LOAD_RESPONSE_TIME_GRAPH_CSV
          - LOAD_RESPONSE_TIME_GRAPH_JSON
          - LOAD_PEAK_RESPONSE_TIME_GRAPH_JSON
          - LOAD_PEAK_RESPONSE_TIME_GRAPH_CSV
          - CPU_PERCENT_CSV
          - CPU_PERCENT_JSON
          - CPU_I_O_WAIT_PERCENT_CSV
          - CPU_I_O_WAIT_PERCENT_JSON
          - DISK_UTILIZATION_PERCENT_CSV
          - DISK_UTILIZATION_PERCENT_JSON
          - NETWORK_BANDWIDTH_CSV
          - NETWORK_BANDWIDTH_JSON
          - SKYLINE_CUSTOMER_IMAGE
          - SKYLINE_DISPATCHER_CONFIGURATION
          - SIGNED_CONTENT_PACKAGE
          - SIGNED_DISPATCHER_CONFIGURATION
          - CONTENT_AUDIT_RESULTS
          - CONTENT_AUDIT_REPORT
          - SKYLINE_UI_TESTS_IMAGE
          - SKYLINE_TRANSFORM_JOB_OUTPUT_ARTIFACT
          - SKYLINE_TRANSFORM_JOB_OUTPUT_DESCRIPTOR
          - CONTENT_PACKAGE
          - DISPATCHER_CONFIGURATION
          - FONT_ARCHIVE
          - UI_TEST_RESULTS
      file:
        type: string
        example: build/code_quality_scan.log
        description: File location
      format:
        type: string
        example: text/csv
        description: File format
      md5:
        type: string
        example: d41d8cd98f00b204e9800998ecf8427e
        description: MD5 hash of the file
      _links:
        type: object
        readOnly: true
        properties:
          self:
            $ref: "#/definitions/HalLink"
            description: This object's representation
    description: Describes an artifact associated with a step
  ArtifactList:
    type: object
    properties:
      _totalNumberOfItems:
        type: integer
        format: int32
        description: The total number of embedded items
      _embedded:
        type: object
        readOnly: true
        properties:
          artifacts:
            type: array
            items:
              $ref: "#/definitions/Artifact"
      _links:
        type: object
        readOnly: true
        properties:
          next:
            $ref: "#/definitions/HalLink"
            description: The next page of results.
          prev:
            $ref: "#/definitions/HalLink"
            description: The previous page of results.
          self:
            $ref: "#/definitions/HalLink"
            description: This object's representation
    description: Describes a list of artifacts associated with a step
  LogOptionRepresentation:
    type: object
    required:
      - name
      - service
    properties:
      service:
        type: string
        description: "Name of the service in environment. Example: author"
      name:
        type: string
        description: "Name of the log for service in environment. Example: aemerror"
  DataStore:
    type: object
    properties:
      type:
        type: string
      blobStorageAccountName:
        type: string
      blobContainerName:
        type: string
  RestorePointDetails:
    type: object
    properties:
      atlasOrganisationId:
        type: integer
        format: int64
        description: Atlas Organisation ID
      atlasClusterId:
        type: integer
        format: int64
        description: Atlas cluster ID
      restorePoint:
        type: integer
        format: int64
        description: Restore point
      deploymentDate:
        type: string
        format: date-time
        description: The date when the deployment was made
      deploymentHistoryId:
        type: integer
        format: int64
        description: The Helm Deployment History ID
      aemReleaseVersion:
        type: string
        description: AEM release version
      repositoryId:
        type: string
        description: Git repository ID
      repositoryName:
        type: string
        description: Git repository name
      repositoryUrl:
        type: string
        description: Git repository URL
      branchName:
        type: string
        description: Git branch name
      commitHash:
        type: string
        description: Git commit hash
      restoreDate:
        type: string
        format: date-time
        description: Restore date
      _links:
        type: object
        readOnly: true
        properties:
          "http://ns.adobe.com/adobecloud/rel/atlascluster":
            $ref: "#/definitions/HalLink"
  RestorePointsList:
    type: object
    properties:
      _totalNumberOfItems:
        type: integer
        format: int32
        description: The total number of embedded items
      _embedded:
        type: object
        readOnly: true
        properties:
          restorePointsDetails:
            type: array
            description: restorePointsDetails
            items:
              $ref: "#/definitions/RestorePointDetails"
      _links:
        type: object
        readOnly: true
        properties:
          next:
            $ref: "#/definitions/HalLink"
            description: The next page of results.
          prev:
            $ref: "#/definitions/HalLink"
            description: The previous page of results.
          self:
            $ref: "#/definitions/HalLink"
            description: This object's representation
  ErrorDetailsRepresentation:
    type: object
    properties:
      errorCode:
        type: string
        readOnly: true
      publicDetails:
        readOnly: true
      message:
        readOnly: true
  Restore-Environmentdetailsrepresentation:
    type: object
    properties:
      releaseId:
        type: string
      repositoryId:
        type: string
      repositoryName:
        type: string
      branch:
        type: string
      commitSha:
        type: string
      repositoryUrl:
        type: string
      timestamp:
        type: integer
        format: int64
  RestoreExecution:
    type: object
    properties:
      id:
        type: string
        description: id
      programId:
        type: string
        example: "14"
        description: "Identifier of the program, unique within the space"
      environmentId:
        type: string
        example: "14"
        description: "Identifier of the environment, unique within the space"
      status:
        type: string
        example: not_started
        description: Status of the restore execution
        enum:
          - not_started
          - running
          - finished
          - error
          - failed
      errorDetails:
        description: "Error details, present only when execution failed"
        $ref: "#/definitions/ErrorDetailsRepresentation"
      environmentDetailsAtSnapshotDate:
        description: Environment details at snapshot timestamp
        $ref: "#/definitions/Restore-Environmentdetailsrepresentation"
      environmentDetailsAtRestoreDate:
        description: Environment details when the restore was triggered
        $ref: "#/definitions/Restore-Environmentdetailsrepresentation"
      createdAt:
        type: string
        format: date-time
        description: createdAt
      updatedAt:
        type: string
        format: date-time
        description: updatedAt
      _links:
        type: object
        readOnly: true
        properties:
          "http://ns.adobe.com/adobecloud/rel/environment":
            $ref: "#/definitions/HalLink"
          "http://ns.adobe.com/adobecloud/rel/flow":
            $ref: "#/definitions/HalLink"
          "http://ns.adobe.com/adobecloud/rel/program":
            description: The Application this environment belongs to
            $ref: "#/definitions/HalLink"
          "http://ns.adobe.com/adobecloud/rel/restoreExecution/logs/download":
            $ref: "#/definitions/HalLink"
          self:
            $ref: "#/definitions/HalLink"
            description: This object's representation
    description: A RestoreExecution
  RestoreExecutionLimit:
    type: object
    properties:
      resetDate:
        type: string
        format: date
        description: Reset date
      available:
        type: integer
        format: int64
        description: Available runs until reset
      max:
        type: integer
        format: int64
        description: Max runs per interval
      countInterval:
        type: integer
        format: int64
        description: Rolling window used to count the available runs
  RestoreExecutionList:
    type: object
    properties:
      _totalNumberOfItems:
        type: integer
        format: int64
        description: The total number of embedded items
      limits:
        description: Restore executions limits
        $ref: "#/definitions/RestoreExecutionLimit"
      _page:
        $ref: "#/definitions/RequestedPageDetails"
        description: Details of the requested page of items
      _embedded:
        type: object
        readOnly: true
        properties:
          restoreExecutions:
            type: array
            items:
              $ref: "#/definitions/RestoreExecution"
      _links:
        type: object
        readOnly: true
        properties:
          next:
            $ref: "#/definitions/HalLink"
            description: The next page of results.
          page:
            $ref: "#/definitions/HalLink"
            description: An arbitrary page of results.
          prev:
            $ref: "#/definitions/HalLink"
            description: The previous page of results.
          self:
            $ref: "#/definitions/HalLink"
            description: This object's representation
  RestoreParamRepresentation:
    type: object
    required:
      - pointInTimeInMillis
    properties:
      pointInTimeInMillis:
        type: string
        description: Desired point in time
        pattern: "\d{1,19}$"
  IPAllowedListBinding:
    type: object
    required:
      - environmentId
    properties:
      id:
        type: integer
        format: int64
        example: 14
        description: Identifier of the IP Allowed List Binding to an Environment
      tier:
        type: string
        example: publish
        description: Tier of the environment.
        enum:
          - PUBLISH
          - PREVIEW
          - AUTHOR
          - STATIC
          - DELIVERY
      status:
        type: string
        example: NOT_STARTED
        description: Status of the binding.
      programId:
        type: integer
        format: int64
        example: 22
        description: Identifier of the program.
      ipAllowListId:
        type: integer
        format: int64
        example: 17
        description: Identifier of the IP allow list.
      environmentId:
        type: integer
        format: int64
        example: 5
        description: Identifier of the environment.
      _links:
        type: object
        readOnly: true
        properties:
          "http://ns.adobe.com/adobecloud/rel/program":
            description: The Application this environment belongs to.
            $ref: "#/definitions/HalLink"
          "http://ns.adobe.com/adobecloud/rel/ipAllowList":
            description: IpAllowList to be binded to the environment.
            $ref: "#/definitions/HalLink"
          self:
            $ref: "#/definitions/HalLink"
            description: This object's representation
    description: Describes an __IP Allowed List Binding__
  IPAllowedList:
    type: object
    required:
      - ipCidrSet
      - name
    properties:
      id:
        type: integer
        format: int64
        example: 14
        description: Identifier of the IP Allowed List
      name:
        type: string
        example: NewYork Office
        description: Name of the IP Allowed List
      programId:
        type: integer
        format: int64
        example: 22
        description: Identifier of the program.
      ipCidrSet:
        type: array
        example: "["11.22.33.44/28", "99.88.77.66/32"]"
        description: IP CIDR Set
        uniqueItems: true
        items:
          type: string
        maxItems: 50
        minItems: 1
      bindings:
        type: array
        description: IP Allowlist bindings
        items:
          $ref: "#/definitions/IPAllowedListBinding"
      _links:
        type: object
        readOnly: true
        properties:
          "http://ns.adobe.com/adobecloud/rel/ipAllowlistBindings":
            $ref: "#/definitions/HalLink"
          "http://ns.adobe.com/adobecloud/rel/program":
            description: The Application this environment belongs to.
            $ref: "#/definitions/HalLink"
          self:
            $ref: "#/definitions/HalLink"
            description: This object's representation
    description: Describes an __IP Allowed List__
  Updateanipallowlist:
    type: object
    required:
      - ipCidrSet
      - name
    properties:
      name:
        type: string
        example: NewYork Office
        description: Name of the IP Allowed List
      ipCidrSet:
        type: array
        example: "["11.22.33.44/28", "99.88.77.66/32"]"
        description: IP CIDR Set
        uniqueItems: true
        items:
          type: string
        maxItems: 50
        minItems: 1
  IPAllowlistBindingsList:
    type: object
    properties:
      _totalNumberOfItems:
        type: integer
        format: int32
        description: The total number of embedded items
      ipAllowlistId:
        type: string
      _embedded:
        type: object
        readOnly: true
        properties:
          ipAllowlistBindings:
            type: array
            items:
              $ref: "#/definitions/IPAllowedListBinding"
      _links:
        type: object
        readOnly: true
        properties:
          next:
            $ref: "#/definitions/HalLink"
            description: The next page of results.
          prev:
            $ref: "#/definitions/HalLink"
            description: The previous page of results.
          self:
            $ref: "#/definitions/HalLink"
            description: This object's representation
  IPAllowlistList:
    type: object
    properties:
      _totalNumberOfItems:
        type: integer
        format: int32
        description: The total number of embedded items
      _embedded:
        type: object
        readOnly: true
        properties:
          ipAllowlists:
            type: array
            items:
              $ref: "#/definitions/IPAllowedList"
      _links:
        type: object
        readOnly: true
        properties:
          next:
            $ref: "#/definitions/HalLink"
            description: The next page of results.
          prev:
            $ref: "#/definitions/HalLink"
            description: The previous page of results.
          self:
            $ref: "#/definitions/HalLink"
            description: This object's representation
  Createanewipallowlist:
    type: object
    required:
      - ipCidrSet
      - name
    properties:
      name:
        type: string
        example: NewYork Office
        description: Name of the IP Allowed List
      ipCidrSet:
        type: array
        example: "["11.22.33.44/28", "99.88.77.66/32"]"
        description: IP CIDR Set
        uniqueItems: true
        items:
          type: string
        maxItems: 50
        minItems: 1
  Domain:
    type: object
    required:
      - label
      - programId
    properties:
      deleted:
        type: boolean
        default: false
      id:
        type: integer
        format: int64
        description: id
      domainName:
        type: string
        example: customer.domain.com
        description: Name of the domain name
      label:
        type: string
        description: Domain label
      programId:
        type: integer
        format: int64
        description: Id of the program
      createdAt:
        type: integer
        format: int64
        description: Create date
      updatedAt:
        type: integer
        format: int64
        description: Last updated date
      deletedAt:
        type: integer
        format: int64
        description: Deleted At
      acmeValidationStatus:
        type: string
        example: NOT_VERIFIED
        description: Acme Validation Status
      adobeValidationStatus:
        type: string
        example: NOT_VERIFIED
        description: Adobe Validation Status
      acmeValidationToken:
        type: string
        description: Acme Validation Token
      adobeValidationToken:
        type: string
        description: Adobe Validation Token
    description: A Domain representation
  UpdateaDomain:
    type: object
    required:
      - label
    properties:
      label:
        type: string
        example: "???"
        description: Domain label
  Response:
    type: object
    properties:
      status:
        type: integer
        format: int32
      entity:
        type: object
      metadata:
        type: object
        additionalProperties:
          type: array
          items:
            type: object
  DomainCreate:
    type: object
    properties:
      domainName:
        type: string
        example: customer.domain.com
        description: Name of the domain name
    description: A Domain representation for creating a domain
  DomainTokenValidationBody:
    type: object
    properties:
      validationType:
        type: string
        example: acme
        description: Type of the validation
    description: The json body for token validation
  DomainMapping:
    type: object
    properties:
      domainMappingId:
        type: integer
        format: int64
        description: Domain Mapping ID
      programId:
        type: integer
        format: int64
        description: Identifier of the CM Program
      originId:
        type: integer
        format: int64
        description: Id of either EDS site or Skyline Environment
      domainMappingStatus:
        type: string
        description: Status of the domain mapping
      domainName:
        type: string
        description: Name of the domain
      originType:
        type: string
        description: "Type of origin: EDS_SITE or SKYLINE_ENVIRONMENT"
      tier:
        type: string
        description: "Type of tier: PREVIEW or PUBLISH"
        enum:
          - PUBLISH
          - PREVIEW
          - AUTHOR
          - STATIC
          - DELIVERY
      domainId:
        type: integer
        format: int64
        description: Id of the domain
      certificateId:
        type: integer
        format: int64
        description: Id of the certificate
      createdAt:
        type: integer
        format: int64
        description: Creation date
      updatedAt:
        type: integer
        format: int64
        description: Last modification date
      deletedAt:
        type: integer
        format: int64
        description: Deletion date
    description: Describes a domain mapping
  Updateadomainmapping:
    type: object
    required:
      - certificateId
      - tier
    properties:
      certificateId:
        type: integer
        format: int64
        description: Certificate ID
      tier:
        type: string
        description: "Type of tier: PREVIEW or PUBLISH"
        enum:
          - PUBLISH
          - PREVIEW
          - AUTHOR
          - STATIC
          - DELIVERY
  DomainMappingList:
    type: object
    properties:
      totalNumberOfItems:
        type: integer
        format: int32
      domainMappings:
        type: array
        items:
          $ref: "#/definitions/DomainMapping"
  Createanewdomainmapping:
    type: object
    required:
      - certificateId
      - domainId
      - originId
      - originType
      - tier
    properties:
      originId:
        type: integer
        format: int64
        description: "Origin ID: EDS or Skyline Environment ID"
      domainId:
        type: integer
        format: int64
        description: Domain ID
      certificateId:
        type: integer
        format: int64
        description: Certificate ID
      tier:
        type: string
        description: "Type of the tier: PREVIEW or PUBLISH"
        enum:
          - PUBLISH
          - PREVIEW
          - AUTHOR
          - STATIC
          - DELIVERY
      originType:
        type: string
        description: "Type of the origin: EDS_SITE or SKYLINE_ENVIRONMENT"
        enum:
          - EDS_SITE
          - SKYLINE_ENVIRONMENT
  SslCertificateRepresentation:
    type: object
    properties:
      id:
        type: integer
        format: int64
        description: id
      programId:
        type: integer
        format: int64
        example: 14
        description: Identifier of the application. Unique within the space.
      serialNumber:
        type: string
        description: Unique identifier of the certificate at CA level.
      name:
        type: string
        example: Certificate Name Example
        description: Name of the SSL Certificate.
      issuer:
        type: string
        description: Issuer of the SSL Certificate.
      expireAt:
        type: integer
        format: int64
        description: Expiration date of the SSL Certificate.
      commonName:
        type: string
        description: Common name of the SSL Certificate.
      subjectAlternativeNames:
        type: array
        description: Subject alternative names of the SSL Certificate.
        items:
          type: string
      certificate:
        type: string
        description: Encrypted content of the SSL Certificate.
      chain:
        type: string
        description: Content of the Chain File.
      createdAt:
        type: integer
        format: int64
        description: Date of SSL Certificate submission.
      updatedAt:
        type: integer
        format: int64
        description: Date of last SSL Certificate update.
      _links:
        type: object
        readOnly: true
        properties:
          self:
            $ref: "#/definitions/HalLink"
            description: This object's representation
    description: Describes an SSL Certificate
  StackTraceElement:
    type: object
    properties:
      classLoaderName:
        type: string
      moduleName:
        type: string
      moduleVersion:
        type: string
      methodName:
        type: string
      fileName:
        type: string
      lineNumber:
        type: integer
        format: int32
      className:
        type: string
      nativeMethod:
        type: boolean
        default: false
  SslCertificateNotFoundException:
    type: object
    properties:
      stackTrace:
        type: array
        items:
          $ref: "#/definitions/StackTraceElement"
      message:
        type: string
      localizedMessage:
        type: string
  SecretString:
    type: object
    properties:
      value:
        type: string
        example: my-secret
        description: "Secret value for updating the secrets, null for not updating the existing secret"
      path:
        type: string
        example: /path/to/secret
        description: Path to the secret value
  CreateOrUpdateSslCertificateBody:
    type: object
    required:
      - name
      - certificate
      - privateKey
      - chain
    properties:
      name:
        type: string
        description: The name of the new SSL Certificate.
      certifcate:
        type: string
        description: The PEM-encoded certificate.
      privateKey:
        type: string
        description: The PEM-encoded private key.
      chain:
        type: array
        items:
          type: string
        description: The PEM-encoded certificate chain.
  AllSSLCertificatesList:
    type: object
    properties:
      _totalNumberOfItems:
        type: integer
        format: int32
        description: The total number of embedded items
      _page:
        $ref: "#/definitions/RequestedPageDetails"
        description: Details of the requested page of items
      _embedded:
        type: object
        readOnly: true
        properties:
          certificates:
            type: array
            items:
              $ref: "#/definitions/SslCertificateRepresentation"
      _links:
        type: object
        readOnly: true
        properties:
          next:
            $ref: "#/definitions/HalLink"
            description: The next page of results.
          page:
            $ref: "#/definitions/HalLink"
            description: An arbitrary page of results.
          prev:
            $ref: "#/definitions/HalLink"
            description: The previous page of results.
          self:
            $ref: "#/definitions/HalLink"
            description: This object's representation
  CreateDvCertificateBody:
    type: object
    required:
      - domainIds
    properties:
      name:
        type: string
        example: my-cert
        description: Name of the certificate
      domainIds:
        type: array
        description: List of domain IDs to associate with the certificate
        items:
          type: integer
          format: int64
  SslCertificate:
    type: object
    properties:
      id:
        type: integer
        format: int64
      sslCertificateType:
        type: string
        enum:
          - DV
          - EV
          - OV
      programId:
        type: integer
        format: int64
      serialNumber:
        type: string
      name:
        type: string
      certificate:
        type: string
      issuer:
        type: string
      expireAt:
        type: integer
        format: int64
      privateKeyPath:
        type: string
      commonName:
        type: string
      commonNameRegex:
        type: string
      subjectAlternativeNames:
        type: array
        items:
          type: string
      subjectAlternativeNamesRegex:
        type: array
        items:
          type: string
      chain:
        type: string
      createdAt:
        type: integer
        format: int64
      updatedAt:
        type: integer
        format: int64
      deletedAt:
        type: integer
        format: int64
      externalId:
        type: integer
        format: int64
      sslCertificateStatus:
        type: string
        enum:
          - PENDING
          - VALID
          - EXPIRED
  Site:
    type: object
    properties:
      siteId:
        type: integer
        format: int64
        description: siteId
      programId:
        type: string
        description: Identifier of the CM Program ID. Unique within the space.
      siteName:
        type: string
        description: Name of the site
      repoUrl:
        type: string
        description: CM Eds Site Repo URL.
      siteStatus:
        type: string
        description: Site EDS status
      validationToken:
        type: string
        description: Validation token of the CM EDS Site
      createdAt:
        type: integer
        format: int64
        description: Creation date
      modifiedAt:
        type: integer
        format: int64
        description: Last modification date
      deletedAt:
        type: integer
        format: int64
        description: Deleted date
      deleted:
        type: boolean
        description: deleted or not
        default: false
      _links:
        type: object
        readOnly: true
        properties:
          self:
            $ref: "#/definitions/HalLink"
            description: This object's representation
          sites:
            $ref: "#/definitions/HalLink"
    description: Describes a Site
  SiteList:
    type: object
    properties:
      _totalNumberOfItems:
        type: integer
        format: int32
        description: The total number of embedded items
      _embedded:
        type: object
        readOnly: true
        properties:
          sites:
            type: array
            items:
              $ref: "#/definitions/Site"
      _links:
        type: object
        readOnly: true
        properties:
          self:
            $ref: "#/definitions/HalLink"
            description: This object's representation
  NewRelicSub-AccountUser:
    type: object
    properties:
      id:
        type: string
        example: "42"
        description: Identifier of the New Relic sub account User
      firstName:
        type: string
        example: John
        description: First name of the New Relic sub account User
      lastName:
        type: string
        example: Doe
        description: Last name of the New Relic sub account User
      email:
        type: string
        example: foobar@newrelic.com
        description: email of the New Relic sub account user
      role:
        type: string
        example: admin
        description: Role of the New Relic sub account user
      owner:
        type: boolean
        example: false
        description: Owner detail of the New Relic sub account User
        default: false
    description: Describes __New Relic Sub-Account User__
  NewRelicSubAccountUserlist:
    type: object
    properties:
      _totalNumberOfNewRelicSubAccountUsers:
        type: integer
        format: int32
      applicationId:
        type: string
        example: "44"
        description: The id of the Cloud Manager application this sub account user list is linked to
      _embedded:
        type: object
        readOnly: true
        properties:
          newRelicUsers:
            type: array
            items:
              $ref: "#/definitions/NewRelicSub-AccountUser"
      _links:
        type: object
        readOnly: true
        properties:
          "http://ns.adobe.com/adobecloud/rel/application":
            description: Application linked to this New Relic sub account
            $ref: "#/definitions/HalLink"
          "http://ns.adobe.com/adobecloud/rel/newRelicSubAccount":
            description: New Relic sub account linked to the New Relic sub account User list
            $ref: "#/definitions/HalLink"
          self:
            $ref: "#/definitions/HalLink"
            description: This object's representation
    description: List of New Relic sub account users
  Organisation:
    type: object
    properties:
      organizationName:
        type: string
        example: adobecloudmanager-acmeCorp
        description: Name of the git repository organization
        minLength: 0
        maxLength: 50
      status:
        type: string
        example: creating
        description: Status of the organisation on-boarding process
        enum:
          - not_started
          - creating
          - ready
          - failed
    description: Organisation details
  Tenant:
    type: object
    required:
      - imsOrgId
      - imsTenantId
    properties:
      id:
        type: string
        example: "14"
        description: Identifier of the tenant
      imsOrgId:
        type: string
        example: 1AAA222B3C4444D55E666666@AdobeOrg
        description: IMS Organization of this tenant
        minLength: 0
        maxLength: 255
      imsTenantId:
        type: string
        example: acmeCorp
        description: IMS Tenant Id
        minLength: 0
        maxLength: 255
      description:
        type: string
        example: Description for acmeCorp
        description: Description of the tenant
        minLength: 0
        maxLength: 255
      status:
        type: string
        example: creating
        description: Status of the tenant
        enum:
          - creating
          - ready
          - failed
      organisation:
        description: Tenant-level git repository organisation
        $ref: "#/definitions/Organisation"
      _links:
        type: object
        readOnly: true
        properties:
          "http://ns.adobe.com/adobecloud/rel/programs":
            description: Programs defined in the tenant
            $ref: "#/definitions/HalLink"
          self:
            $ref: "#/definitions/HalLink"
            description: This object's representation
    description: Describes a __Tenant__
  TenantList:
    type: object
    properties:
      _totalNumberOfItems:
        type: integer
        format: int32
        description: The total number of embedded items
      _embedded:
        type: object
        readOnly: true
        properties:
          tenants:
            type: array
            items:
              $ref: "#/definitions/Tenant"
      _links:
        type: object
        readOnly: true
        properties:
          next:
            $ref: "#/definitions/HalLink"
            description: The next page of results.
          prev:
            $ref: "#/definitions/HalLink"
            description: The previous page of results.
          self:
            $ref: "#/definitions/HalLink"
            description: This object's representation
  Region:
    type: object
    properties:
      name:
        type: string
        example: va7
        description: Region name
      _links:
        type: object
        readOnly: true
        properties:
          self:
            $ref: "#/definitions/HalLink"
            description: This object's representation
    description: Describes a __Region__
  RegionsList:
    type: object
    properties:
      _totalNumberOfItems:
        type: integer
        format: int32
        description: The total number of embedded items
      _embedded:
        type: object
        readOnly: true
        properties:
          regions:
            type: array
            items:
              $ref: "#/definitions/Region"
      _links:
        type: object
        readOnly: true
        properties:
          next:
            $ref: "#/definitions/HalLink"
            description: The next page of results.
          prev:
            $ref: "#/definitions/HalLink"
            description: The previous page of results.
          self:
            $ref: "#/definitions/HalLink"
            description: This object's representation
  DnsConfiguration:
    type: object
    required:
      - resolvers
    properties:
      resolvers:
        type: array
        description: List of remote DNS resolvers
        items:
          type: string
    description: DNS Information. Only applicable to VPN infrastructures.
  GatewayInfrastructure:
    type: object
    required:
      - address
      - addressSpace
    properties:
      address:
        type: string
        description: Customer VPN Device IP Address
      addressSpace:
        type: array
        description: IP Ranges to route through the VPN
        items:
          type: string
  IpSecPolicyInfrastructure:
    type: object
    required:
      - dhGroup
      - ikeEncryption
      - ikeIntegrity
      - ipsecEncryption
      - ipsecIntegrity
      - pfsGroup
      - saDatasize
      - saLifetime
    properties:
      dhGroup:
        type: string
        description: DH Group
        enum:
          - DHGroup24
          - ECP384
          - ECP256
          - DHGroup14
          - DHGroup2048
          - DHGroup2
          - DHGroup1
          - None
      ikeEncryption:
        type: string
        description: IKEv2 Encryption
        enum:
          - AES256
          - AES192
          - AES128
          - DES3
          - DES
      ikeIntegrity:
        type: string
        description: IKEv2 Integrity
        enum:
          - SHA384
          - SHA256
          - SHA1
          - MD5
      ipsecEncryption:
        type: string
        description: IPsec Encryption
        enum:
          - GCMAES256
          - GCMAES192
          - GCMAES128
          - AES256
          - AES192
          - AES128
          - DES3
          - DES
          - None
      ipsecIntegrity:
        type: string
        description: IPsec Integrity
        enum:
          - GCMAES256
          - GCMAES192
          - GCMAES128
          - SHA256
          - SHA1
          - MD5
      pfsGroup:
        type: string
        description: PFS Group
        enum:
          - PFS24
          - ECP384
          - ECP256
          - PFS2048
          - PFS2
          - PFS1
          - None
      saDatasize:
        type: integer
        format: int64
        description: QM SA Lifetime in KBytes under 1024
        minimum: 1024
      saLifetime:
        type: integer
        format: int32
        description: "QM SA Lifetime in Seconds, minimum 300"
        minimum: 300
  VpnConnection:
    type: object
    required:
      - gateway
      - ipsecPolicy
      - name
      - sharedKey
    properties:
      name:
        type: string
        description: Name of the connection
      gateway:
        description: Gateway configuration
        $ref: "#/definitions/GatewayInfrastructure"
      sharedKey:
        type: string
        description: Customer VPN preshared key
      ipsecPolicy:
        description: IPSec Policy
        $ref: "#/definitions/IpSecPolicyInfrastructure"
  NetworkInfrastructure:
    type: object
    required:
      - kind
      - region
    properties:
      kind:
        type: string
        description: Kind of the infrastructure
        enum:
          - vpn
          - dedicatedEgressIp
          - flexiblePortEgress
      id:
        type: string
        description: id
        readOnly: true
      programId:
        type: string
        example: "14"
        description: Identifier of the program. Unique within the space.
        readOnly: true
      status:
        type: string
        example: creating
        description: Status of the network configuration
        enum:
          - creating
          - failed
          - updating
          - deleting
          - deleted
          - ready
          - error
        readOnly: true
      region:
        type: string
        example: va6
        description: "Region to create the infrastructure. Use your primary region, whose identifier can be retrieved from the [List Regions endpoint](#operation/getProgramRegions)."
      isPrimaryRegion:
        type: boolean
        description: Boolean property to mark whether network infrastructure being created is for primary region or not.
        default: false
      created:
        type: string
        format: date-time
        description: Creation date
        readOnly: true
      updated:
        type: string
        format: date-time
        description: Last modification date
        readOnly: true
      addressSpace:
        type: array
        description: A list of CIDRs. It can only be one /26 CIDR (64 IP addresses) or bigger IP range in the customer space. Cannot be changed later. Only applicable to VPN.
        items:
          type: string
      dns:
        description: DNS Information. Only applicable to VPN infrastructures.
        $ref: "#/definitions/DnsConfiguration"
      connections:
        type: array
        description: List of VPN connections
        items:
          $ref: "#/definitions/VpnConnection"
      statusDetails:
        description: Error details. Present only when failed operations.
        $ref: "#/definitions/ErrorDetailsRepresentation"
        readOnly: true
      _links:
        type: object
        readOnly: true
        properties:
          "http://ns.adobe.com/adobecloud/rel/program":
            $ref: "#/definitions/HalLink"
          self:
            $ref: "#/definitions/HalLink"
            description: This object's representation
    description: An network infrastructure representation
  NetworkInfrastructuresList:
    type: object
    properties:
      _totalNumberOfItems:
        type: integer
        format: int32
        description: The total number of embedded items
      _embedded:
        type: object
        readOnly: true
        properties:
          networkInfrastructures:
            type: array
            items:
              $ref: "#/definitions/NetworkInfrastructure"
      _links:
        type: object
        readOnly: true
        properties:
          next:
            $ref: "#/definitions/HalLink"
            description: The next page of results.
          prev:
            $ref: "#/definitions/HalLink"
            description: The previous page of results.
          self:
            $ref: "#/definitions/HalLink"
            description: This object's representation
  PortForwardRepresentation:
    type: object
    required:
      - portDest
      - portOrig
    properties:
      name:
        type: string
        example: smtp.example.com
        description: Destination host
        pattern: "^[a-z0-9]([-a-z0-9]*[a-z0-9])?([.][a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
      portDest:
        type: integer
        format: int32
        example: 443
        description: Destination port
        maximum: 65535
      portOrig:
        type: integer
        format: int32
        example: 30710
        description: Origin port for tunnel. Must be unique and in 30000-31000 range.
        minimum: 30000
        maximum: 31000
  AdvancedNetworkingConfiguration:
    type: object
    properties:
      programId:
        type: string
        example: "14"
        description: Identifier of the program. Unique within the space.
        readOnly: true
      environmentId:
        type: string
        description: Identifier of the environment. Unique within the space.
        readOnly: true
      networkInfrastructureId:
        type: string
        example: "123"
        description: Advanced network infrastructure used.
        readOnly: true
      nonProxyHosts:
        type: array
        description: "A list of hosts that should be reached directly, bypassing the special VPN or egress routing. The patterns may start or end with a """"*"""" for wildcards."
        items:
          type: string
        example:
          - "*.example.com"
          - "*.example.net"
      portForwards:
        type: array
        description: List of port forwarding rules
        items:
          $ref: "#/definitions/PortForwardRepresentation"
      advancedNetworkingEnabled:
        type: boolean
        description: Whether advanced networking is enabled in this environment
        default: false
        readOnly: true
      _links:
        type: object
        readOnly: true
        properties:
          self:
            $ref: "#/definitions/HalLink"
            description: This object's representation
    description: Describes the Advanced Networking configuration for an environment
  AdvancedNetworkingConfigurationList:
    type: object
    properties:
      _totalNumberOfItems:
        type: integer
        format: int32
        description: The total number of embedded items
      _embedded:
        type: object
        readOnly: true
        properties:
          networkingConfigurations:
            type: array
            items:
              $ref: "#/definitions/AdvancedNetworkingConfiguration"
      _links:
        type: object
        readOnly: true
        properties:
          next:
            $ref: "#/definitions/HalLink"
            description: The next page of results.
          prev:
            $ref: "#/definitions/HalLink"
            description: The previous page of results.
          self:
            $ref: "#/definitions/HalLink"
            description: This object's representation
  ContentFlowValidationErrors:
    type: object
    properties:
      errorCode:
        type: string
        description: content flow warning error code
      message:
        type: string
        description: content flow warning message
      details:
        type: array
        description: details
        items:
          type: string
    description: The Content Flow Validation Errors
  ContentFlowInfo:
    type: object
    properties:
      validationErrors:
        type: array
        description: validationErrors
        items:
          $ref: "#/definitions/ContentFlowValidationErrors"
    description: The Content Flow Info
  ContentFlowResultDetails:
    type: object
    properties:
      errorCode:
        type: string
        description: content flow error
      message:
        type: string
        description: content flow error message
      details:
        type: array
        description: details
        items:
          type: string
      info:
        description: info
        $ref: "#/definitions/ContentFlowInfo"
      phase:
        type: string
        description: phase
    description: The Content Flow Result Details
  ContentFlowInput:
    type: object
    properties:
      contentSetId:
        type: string
      destEnvironmentId:
        type: string
      tier:
        type: string
        example: author
        description: tier
      includeACL:
        type: boolean
        description: includeACL
        default: false
      destProgramId:
        type: string
        description: destProgramId
      mergeExcludePaths:
        type: boolean
        description: mergeExcludePaths
        default: false
      copyVersions:
        type: boolean
        description: copyVersions
        default: false
    description: Wraps the content flow execution arguments
  ContentFlowLog:
    type: object
    properties:
      jobType:
        type: string
        example: (import or export)
        description: job type
      programId:
        type: integer
        format: int64
      contentFlowId:
        type: integer
        format: int64
      _links:
        type: object
        readOnly: true
        properties:
          download:
            description: Download Logs link
            $ref: "#/definitions/HalLink"
          logs/tail:
            description: Tail Log link
            $ref: "#/definitions/HalLink"
    description: Log from Content Flow
  Redirect:
    type: object
    required:
      - redirect
    properties:
      redirect:
        type: string
        description: The url to redirect to.
  NewFeedback:
    type: object
    required:
      - rating
      - type
    properties:
      createdAt:
        type: string
        description: Created time
      id:
        type: integer
        description: Identifier of the feedback. Unique within the space.
      rating:
        type: integer
        description: Rating values from 1 to 5
      comment:
        type: string
        description: Feedback comment
      type:
        type: string
        description: Type of feedback
        enum:
          - GO_LIVE
      options:
        type: object
        description: Optional information about the feedback
    description: Describes feedback
  GoLiveDates:
    type: object
    properties:
      plannedDate:
        type: string
        description: Date when go live is planned
      actualDate:
        type: string
        description: Date when the program completed go live
    description: Contains planned and actual go live dates of a program
  PipelineUpdate:
    type: object
    description: Describe an update to a pipeline
    properties:
      phases:
        type: array
        description: Pipeline phases to update
        items:
          $ref: "#/definitions/PipelinePhaseUpdate"
  EnvironmentVariableUpdate:
    type: object
    properties:
      name:
        type: string
        example: MY_VAR1
        description: "Name of the variable. Can only consist of a-z, A-Z, _ and 0-9 and cannot begin with a number."
        pattern: "[a-zA-Z_][a-zA-Z_0-9]*"
      value:
        type: string
        example: myValue
        description: "Value of the variable. Read-Write for non-secrets, write-only for secrets. The length of `secretString` values must be less than 500 characters. An empty value causes a variable to be deleted."
      type:
        type: string
        example: string
        description: Type of the variable. Default `string` if missing. `secretString` variables are encrypted at rest. The type of a variable be changed after creation; the variable must be deleted and recreated.
        enum:
          - string
          - secretString
      service:
        description: "Service of the variable. When not provided, the variable applies to all services. Currently the values ""author"", ""publish"", and ""preview"" are supported. Note - this value is case-sensitive."
    description: "A change (create, update, delete) of a named value on an Environment"
  PipelineVariableUpdate:
    type: object
    properties:
      name:
        type: string
        example: MY_VAR1
        description: "Name of the variable. Can only consist of a-z, A-Z, _ and 0-9 and cannot begin with a number."
        pattern: "[a-zA-Z_][a-zA-Z_0-9]*"
      value:
        type: string
        example: myValue
        description: "Value of the variable. Read-Write for non-secrets, write-only for secrets. The length of `secretString` values must be less than 500 characters. An empty value causes a variable to be deleted."
      type:
        type: string
        example: string
        description: Type of the variable. Default `string` if missing. `secretString` variables are encrypted at rest. The type of a variable be changed after creation; the variable must be deleted and recreated.
        enum:
          - string
          - secretString
    description: "A change (create, update, delete) of a named value on a Pipeline"
  PipelinePhaseUpdate:
    type: object
    required:
      - type
    description: Describes an update to a phase of a pipeline
    properties:
      name:
        type: string
        example: BUILD_1
        description: Name of the phase
      type:
        type: string
        example: BUILD
        description: Type of the phase
        enum:
          - BUILD
          - DEPLOY
      repositoryId:
        type: string
        description: "For BUILD phase type. Identifier of the source repository. The code from this repository will be build at the start of this phase. If not provided, the current value is retained."
      branch:
        type: string
        description: "For BUILD phase type. Name of the tracked branch or a fully qualified git tag (e.g. refs/tags/v1). If not provided, the current value is retained."
      environmentId:
        type: string
        description: For DEPLOY phase type. Identifier of the target environment.
      steps:
        type: array
        description: Steps to update within the phase.
        items:
          $ref: "#/definitions/PipelineStepUpdate"
  PipelineStepUpdate:
    type: object
    required:
      - type
    description: Describes an update to a phase of a pipeline
    properties:
      name:
        type: string
        example: deploy
        description: Name of the step
      options:
        type: object
        description: Map of option parameters for the step
        $ref: "#/definitions/PipelineStepUpdateOptions"
  PipelineStepUpdateOptions:
    type: object
    properties:
      dispatcherCacheInvalidationPaths:
        type: array
        items:
          type: string
        description: "For deploy steps on AMS pipelines, list of paths to invalidate on dispatchers after package installation."
      dispatcherCacheFlushPaths:
        type: array
        items:
          type: string
        description: "For deploy steps on AMS pipelines, list of paths to flush on dispatchers after package installation."
  EnableAdvancedNetworkingConfiguration:
    type: object
    properties:
      nonProxyHosts:
        type: array
        description: "A list of hosts that should be reached directly, bypassing the special VPN or egress routing. The patterns may start or end with a """"*"""" for wildcards."
        items:
          type: string
        example:
          - "*.example.com"
          - "*.example.net"
      portForwards:
        type: array
        description: List of port forwarding rules
        items:
          $ref: "#/definitions/PortForwardRepresentation"
  PipelineExecutionStepStateDetails:
    type: object
    description: Details available for each step state. The set of properties available will vary by the step action.
    properties:
      deployCommands:
        type: string
        description: "For deploy steps, a JSON array encoded as a string which lists the deployment activities expected to be performed."
      currentDeployCommandId:
        type: string
        description: "For deploy steps, the current identifier from the deployCommands which is being executed."
      environmentUrls:
        type: array
        description: "For deploy steps, the the set of URLs for the environment."
        items:
          type: object
          properties:
            instanceType:
              type: string
            instanceUrl:
              type: string
      deploymentStepDescription:
        type: string
        description: "For deploy steps, a JSON array encoded as a string which includes the detailed list of deployment activities which have been performed."
      input:
        type: object
        description: "Input provided when advancing the step. See documentation at https://www.adobe.io/experience-cloud/cloud-manager/guides/api-usage/advancing-and-cancelling-steps/ for details."
  PipelineStepOptions:
    type: object
    description: Options for a pipeline step. Will vary based on step action and platform.
    properties:
      skipDetachingDispatchers:
        type: boolean
        description: "For deploy steps on AMS pipelines, if true will not detach dispatcher from the load balancer."
      dispatcherCacheInvalidationPaths:
        type: array
        items:
          type: string
        description: "For deploy steps on AMS pipelines, list of paths to invalidate on dispatchers after package installation."
      dispatcherCacheFlushPaths:
        type: array
        items:
          type: string
        description: "For deploy steps on AMS pipelines, list of paths to flush on dispatchers after package installation."
      cse:
        type: string
        enum:
          - MY_CSE
          - ANY_CSE
        description: "For managed steps on AMS pipelines, which CSE will be responsible for CSE oversight."
      popularPagesWeight:
        type: integer
        format: int32
        description: "For loadTest steps on AMS pipelines, the percentage of performance test traffic which will be sent to the popular pages bucket."
      newPagesWeight:
        type: integer
        format: int32
        description: "For loadTest steps on AMS pipelines, the percentage of performance test traffic which will be sent to the new pages bucket."
      otherPagesWeight:
        type: integer
        format: int32
        description: "For loadTest steps on AMS pipelines, the percentage of performance test traffic which will be sent to the other pages bucket."
      imageAssetsWeight:
        type: integer
        format: int32
        description: "For assetsTest steps on AMS pipelines, the percentage of asset uploads which will be test images."
      pdfAssetsWeight:
        type: integer
        format: int32
        description: "For assetsTest steps on AMS pipelines, the percentage of asset uploads which will be test PDF files."
  NewProgram:
    type: object
    required:
      - name
      - type
    description: Description of a new program to be created
    properties:
      name:
        type: string
        description: New program name
        minLength: 0
        maxLength: 64
      type:
        type: string
        enum:
          - aem_cloud_service
      capabilities:
        $ref: "#/definitions/ProgramCapabilities"
      solutionNames:
        type: array
        description: List of solutions to be enabled on the new program.
        items:
          type: string
          enum:
            - aemsites
            - aemassets
      goLive:
        description: Go live dates
        $ref: "#/definitions/GoLiveDates"
  NewEnvironment:
    type: object
    description: Description of a new program to be created
    required:
      - name
      - region
      - type
    properties:
      name:
        type: string
        example: acme-dev1
        description: Name of the environment
      type:
        type: string
        enum:
          - dev
          - stage
          - prod
          - rde
      region:
        type: string
        example: va7
        description: Region to create the environment.
      description:
        type: string
        example: This is our primary development environment
        description: Description of the environment
  NewRegionDeployment:
    type: object
    description: Description of a new region deployment to be added in the environment
    required:
      - region
    properties:
      region:
        type: string
        example: va7
        description: Region to be added in the environment
  RegionDeploymentDeletion:
    type: object
    description: Description of region deployment to be deleted in the environment
    required:
      - id
      - status
    properties:
      id:
        type: string
        description: Identifier of the  region deployment
      status:
        type: string
        example: TO_DELETE
        description: Status of the region deployment to be set
  NewRelicSubAccountUser:
    type: object
    properties:
      id:
        type: string
        example: "42"
        description: Identifier of the New Relic sub account User
      firstName:
        type: string
        example: John
        description: First name of the New Relic sub account User
      lastName:
        type: string
        example: Doe
        description: Last name of the New Relic sub account User
      email:
        type: string
        example: foobar@newrelic.com
        description: email of the New Relic sub account user
      role:
        type: string
        example: admin
        description: Role of the New Relic sub account user
      owner:
        type: boolean
        example: false
        description: Owner detail of the New Relic sub account User
        default: false
    description: Describes __New Relic Sub-Account User__
  NewContentSet:
    type: object
    properties:
      name:
        type: string
        description: The name of this content set.
      description:
        type: string
        description: The description of this content set.
      paths:
        type: array
        description: Included asset paths
        items:
          $ref: "#/definitions/ContentSetPath"
  ContentFlowLogs:
    type: object
    properties:
      download:
        $ref: "#/definitions/Redirect"
        description: link to download logs
      logs/tail:
        $ref: "#/definitions/Redirect"
        description: link to download tails log
