{"version":3,"sources":["webpack://cloudmanager-api-docs/./src/pages/tutorial/1-a-basic-webhook.md"],"names":["name","_frontmatter","InlineAlert","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","href","target","parentName","slots","projectName","variant","isMDXComponent"],"mappings":"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","file":"component---src-pages-tutorial-1-a-basic-webhook-md-e5ab74700ac65769733a.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/cloudmanager-api-docs/cloudmanager-api-docs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nimport Glitch from \"../../components/glitch\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"tutorial-step-1---a-basic-webhook\"\n    }}>{`Tutorial Step 1 - A Basic Webhook`}</h1>\n    <p>{`In the first step of the tutorial, we're going to create an event handler (webhook) which is compatible with Adobe I/O Events. This webhook doesn't actually do much; it just logs the body of the request. But it provides a skeleton on which you'll build in later steps.`}</p>\n    <h2 {...{\n      \"id\": \"dependencies\"\n    }}>{`Dependencies`}</h2>\n    <p>{`To write the webhook, this tutorial uses `}<a href=\"https://expressjs.com/\" target=\"_new\">{`Express`}</a>{`, a minimal web framework for Node.js. To automate the parsing of JSON requests, the `}<inlineCode parentName=\"p\">{`body-parser`}</inlineCode>{` package is used. Finally, a package named `}<inlineCode parentName=\"p\">{`dotenv`}</inlineCode>{` is used to parse and load the `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{` file created in `}<a parentName=\"p\" {...{\n        \"href\": \"0-setup.md\"\n      }}>{`Step 0`}</a>{`. To install these three packages, run`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm install express body-parser dotenv\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"writing-the-webhook-script\"\n    }}>{`Writing the Webhook Script`}</h2>\n    <p>{`Now you're ready to write the webhook script itself. Create a new file named `}<inlineCode parentName=\"p\">{`index.js`}</inlineCode>{` and open it in your IDE.`}</p>\n    <p>{`The webhook script itself has four main parts. The first part is including the dependencies, loading the `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{` file, and setting up the Express application:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const express = require(\"express\");\nconst bodyParser = require(\"body-parser\");\n\nrequire(\"dotenv\").config();\n\nconst app = express();\n\napp.use(bodyParser.json());\n`}</code></pre>\n    <p>{`The second and third parts are the Express `}<em parentName=\"p\">{`routes`}</em>{`. These are JavaScript functions that handle specific request patterns. An Adobe I/O webhook must handle two different types of requests.`}</p>\n    <ol>\n      <li parentName=\"ol\">{`It must handle GET requests with a `}<inlineCode parentName=\"li\">{`challenge`}</inlineCode>{` query string parameter by responding with the `}<inlineCode parentName=\"li\">{`challenge`}</inlineCode>{` parameter.`}</li>\n      <li parentName=\"ol\">{`It must handle POST requests by responding with a 200 status code. This is how the actual events will be received.`}</li>\n    </ol>\n    <p>{`For the purpose of this tutorial, the path `}<inlineCode parentName=\"p\">{`/webhook`}</inlineCode>{` is used. This can be any path, even just `}<inlineCode parentName=\"p\">{`/`}</inlineCode>{`, but the `}<strong parentName=\"p\">{`same`}</strong>{` path must be used for both the GET and POST routes.`}</p>\n    <p>{`The challenge handler looks like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`app.get(\"/webhook\", (req, res) => {\n  if (req.query[\"challenge\"]) {\n    res.send(req.query[\"challenge\"]);\n  } else {\n    console.log(\"No challenge\");\n    res.status(400);\n  }\n});\n`}</code></pre>\n    <p>{`For the POST handler, at this point in the tutorial, it should just log the body and then write something trivial as a response.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`app.post(\"/webhook\", (req, res) => {\n  console.log(req.body);\n  res.writeHead(200, { \"Content-Type\": \"application/text\" });\n  res.end(\"pong\");\n});\n`}</code></pre>\n    <p>{`The last part of the script is to start listening for requests. Here, the `}<inlineCode parentName=\"p\">{`PORT`}</inlineCode>{` variable specified in the `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{` file is used.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const listener = app.listen(process.env.PORT, () => {\n  console.log(\\`Your app is listening on port \\${listener.address().port}\\`);\n});\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"running-the-webhook-script\"\n    }}>{`Running the Webhook Script`}</h2>\n    <p>{`You have at least two options to run the webhook script. The first way is to simply run it locally with`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`node index.js\n`}</code></pre>\n    <p>{`You should see a message that it is up and running:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`Your app is listening on port 4000\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"creating-a-tunnel-with-ngrok\"\n    }}>{`Creating a Tunnel with ngrok`}</h3>\n    <p>{`In order to use the webhook with Adobe I/O, it must be accessible to the public internet. But, your development machine is probably not accessible. So you need to open a `}<em parentName=\"p\">{`tunnel`}</em>{` allowing public access to the webhook. One popular tool for doing this is `}<a href=\"https://ngrok.com\" target=\"_new\">{`ngrok`}</a>{`. Follow the instructions on the ngrok website to install it. Once it is installed, you can open up a tunnel by running`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`ngrok http 4000\n`}</code></pre>\n    <InlineAlert slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`If you changed the `}<inlineCode parentName=\"p\">{`PORT`}</inlineCode>{` variable in the `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{` file to something else, adjust the command to suit.`}</p>\n    <p>{`Once running ngrok will show you two `}<em parentName=\"p\">{`forwarding`}</em>{` addresses:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`Forwarding                    http://e639e8fd.ngrok.io -> localhost:4000\nForwarding                    https://e639e8fd.ngrok.io -> localhost:4000\n`}</code></pre>\n    <InlineAlert slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`For the purpose of this tutorial, the free ngrok service is acceptable. Just keep in mind that every time you restart ngrok you will get a new URL.`}</p>\n    <h3 {...{\n      \"id\": \"running-the-webhook-script-with-glitch\"\n    }}>{`Running the Webhook Script with Glitch`}</h3>\n    <p>{`Alternatively, you can run the webhook script using `}<a href=\"https://glitch.com/\" target=\"_new\">{`Glitch`}</a>{`. Glitch is an interactive web-based code editor for Node.js applications with built-in hosting. To save you the trouble of copy and pasting the files you've created already, you can just click the button below to create a new application on Glitch pre-populated with the content of the tutorial so far.`}</p>\n    <Glitch projectName=\"adobe-cloudmanager-api-tutorial-step1\" mdxType=\"Glitch\" />\n    <InlineAlert slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`Feel free to create an account with Glitch if you want to continue to use it in subsequent steps of the tutorial.`}</p>\n    <h2 {...{\n      \"id\": \"registering-the-webhook-with-adobe-io\"\n    }}>{`Registering the Webhook with Adobe I/O`}</h2>\n    <p>{`Now that you have your webhook running at a publicly accessible URL, you can register it with Adobe I/O. To do this, open the `}<a href=\"https://console.adobe.io/projects\" target=\"_new\">{`Adobe I/O Console`}</a>{` and open the Project you created in Step 0. Click Add to Project and select Event. Select Cloud Manager and click Next.`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"1280px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"32.49999999999999%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/cloudmanager-api-docs/static/e58032fc7b17e3cda0f9f29877000a9b/cb523/event-select-event-types.webp 320w\", \"/cloudmanager-api-docs/static/e58032fc7b17e3cda0f9f29877000a9b/797b9/event-select-event-types.webp 640w\", \"/cloudmanager-api-docs/static/e58032fc7b17e3cda0f9f29877000a9b/4b075/event-select-event-types.webp 1280w\", \"/cloudmanager-api-docs/static/e58032fc7b17e3cda0f9f29877000a9b/5a519/event-select-event-types.webp 1842w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/cloudmanager-api-docs/static/e58032fc7b17e3cda0f9f29877000a9b/72799/event-select-event-types.png 320w\", \"/cloudmanager-api-docs/static/e58032fc7b17e3cda0f9f29877000a9b/6af66/event-select-event-types.png 640w\", \"/cloudmanager-api-docs/static/e58032fc7b17e3cda0f9f29877000a9b/21b4d/event-select-event-types.png 1280w\", \"/cloudmanager-api-docs/static/e58032fc7b17e3cda0f9f29877000a9b/c95f0/event-select-event-types.png 1842w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/cloudmanager-api-docs/static/e58032fc7b17e3cda0f9f29877000a9b/21b4d/event-select-event-types.png\",\n            \"alt\": \"Select Event Types\",\n            \"title\": \"Select Event Types\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <p>{`Select the events you want to subscribe to. For the purpose of this tutorial, you will need `}<strong parentName=\"p\">{`at least`}</strong>{` the Pipeline Execution Started event. Click the Next button.`}</p>\n    <p>{`There are three options for receiving events: Journaling, Webhooks, and Runtime actions. For the purpose of this tutorial, select the Webhook option.`}</p>\n    <p>{`If you are using ngrok, the Webhook URL will be the Forwarding address appended with `}<inlineCode parentName=\"p\">{`/webhook`}</inlineCode>{`, e.g. `}<inlineCode parentName=\"p\">{`https://e639e8fd.ngrok.io/webhook`}</inlineCode>{`. If you are using Glitch, the URL will be the Glitch application name appended with `}<inlineCode parentName=\"p\">{`.glitch.me/webhook`}</inlineCode>{`, e.g. `}<inlineCode parentName=\"p\">{`https://enchanted-bathroom.glitch.me/webhook`}</inlineCode></p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"1120px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"67.5%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/cloudmanager-api-docs/static/237765ccbd9d102f61a4bace8627f183/cb523/add-webhook-to-existing-integration.webp 320w\", \"/cloudmanager-api-docs/static/237765ccbd9d102f61a4bace8627f183/797b9/add-webhook-to-existing-integration.webp 640w\", \"/cloudmanager-api-docs/static/237765ccbd9d102f61a4bace8627f183/2a77d/add-webhook-to-existing-integration.webp 1120w\"],\n            \"sizes\": \"(max-width: 1120px) 100vw, 1120px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/cloudmanager-api-docs/static/237765ccbd9d102f61a4bace8627f183/72799/add-webhook-to-existing-integration.png 320w\", \"/cloudmanager-api-docs/static/237765ccbd9d102f61a4bace8627f183/6af66/add-webhook-to-existing-integration.png 640w\", \"/cloudmanager-api-docs/static/237765ccbd9d102f61a4bace8627f183/f43e4/add-webhook-to-existing-integration.png 1120w\"],\n            \"sizes\": \"(max-width: 1120px) 100vw, 1120px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/cloudmanager-api-docs/static/237765ccbd9d102f61a4bace8627f183/f43e4/add-webhook-to-existing-integration.png\",\n            \"alt\": \"Event Registration\",\n            \"title\": \"Event Registration\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <InlineAlert slots=\"text\" variant=\"warning\" mdxType=\"InlineAlert\" />\n    <p>{`Ensure that the Single Delivery style is selected. The tutorial code is `}<strong parentName=\"p\">{`not`}</strong>{` intended to be used with the Batch style, although you may want to explore this on your own.`}</p>\n    <h2 {...{\n      \"id\": \"next-step\"\n    }}>{`Next Step`}</h2>\n    <p>{`With all that done, you're ready to proceed to the next step. Continue to `}<a parentName=\"p\" {...{\n        \"href\": \"2-webhook-signature-validation.md\"\n      }}>{`Step 2`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}